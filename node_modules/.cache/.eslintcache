[{"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\index.js":"1","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\App.js":"2","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\script.js":"3","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\SentimentCharts.js":"4","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Maps.js":"5","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Collection.js":"6","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\TweetList.js":"7","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\WordCloud.js":"8","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\TimeLines.js":"9","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Dbs.js":"10","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Home.js":"11","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\LoadingData.js":"12","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\preloader.js":"13","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\Filters.js":"14","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SentimentFilters.js":"15","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\TimeLinesFilters.js":"16","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\BarChart.js":"17","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\PieChart.js":"18","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\TimeLineChart.js":"19","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\MultiTimeLineChart.js":"20","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\TweetsTable.js":"21","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchFilters.js":"22","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchHashtag.js":"23","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchText.js":"24","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\index.jsx":"25","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\hooks\\useTable.js":"26","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\TableFooter\\index.jsx":"27"},{"size":211,"mtime":1643644658000,"results":"28","hashOfConfig":"29"},{"size":12842,"mtime":1644927603727,"results":"30","hashOfConfig":"29"},{"size":10081,"mtime":1643644658000,"results":"31","hashOfConfig":"29"},{"size":3084,"mtime":1644882258772,"results":"32","hashOfConfig":"29"},{"size":3725,"mtime":1644927855229,"results":"33","hashOfConfig":"29"},{"size":751,"mtime":1644683207272,"results":"34","hashOfConfig":"29"},{"size":2088,"mtime":1644926752448,"results":"35","hashOfConfig":"29"},{"size":4581,"mtime":1644927809218,"results":"36","hashOfConfig":"29"},{"size":3155,"mtime":1644927661484,"results":"37","hashOfConfig":"29"},{"size":731,"mtime":1644683209536,"results":"38","hashOfConfig":"29"},{"size":2083,"mtime":1644624149309,"results":"39","hashOfConfig":"29"},{"size":2903,"mtime":1644931156821,"results":"40","hashOfConfig":"29"},{"size":784,"mtime":1643644656000,"results":"41","hashOfConfig":"29"},{"size":23862,"mtime":1644928350146,"results":"42","hashOfConfig":"29"},{"size":22995,"mtime":1644928363369,"results":"43","hashOfConfig":"29"},{"size":13549,"mtime":1644928054163,"results":"44","hashOfConfig":"29"},{"size":967,"mtime":1643644656000,"results":"45","hashOfConfig":"29"},{"size":1602,"mtime":1643644656000,"results":"46","hashOfConfig":"29"},{"size":758,"mtime":1643644656000,"results":"47","hashOfConfig":"29"},{"size":1332,"mtime":1643644656000,"results":"48","hashOfConfig":"29"},{"size":2279,"mtime":1643644656000,"results":"49","hashOfConfig":"29"},{"size":2200,"mtime":1644928012487,"results":"50","hashOfConfig":"29"},{"size":2292,"mtime":1644928183660,"results":"51","hashOfConfig":"29"},{"size":2201,"mtime":1644928130602,"results":"52","hashOfConfig":"29"},{"size":1583,"mtime":1644928301985,"results":"53","hashOfConfig":"29"},{"size":849,"mtime":1643644656000,"results":"54","hashOfConfig":"29"},{"size":1074,"mtime":1643644656000,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"tjoxod",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"58"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"126","usedDeprecatedRules":"58"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"58"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\index.js",[],["132","133"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\App.js",["134","135","136","137","138"],"import './style.css';\r\nimport './script.js';\r\nimport axios from 'axios';\r\nimport SentimentCharts from './components/SentimentCharts';\r\nimport TweetList from './components/TweetList';\r\nimport WordCloud from './components/WordCloud';\r\nimport TimeLines from './components/TimeLines';\r\nimport Maps from './components/Maps';\r\nimport Home from './components/Home';\r\nimport Collection from './components/Collection';\r\nimport Dbs from './components/Dbs';\r\nimport LoadingData from './components/LoadingData';\r\nimport { jsPDF } from \"jspdf\";\r\nimport  html2canvas  from 'html2canvas';\r\n\r\nimport React from 'react';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    content:0,\r\n    db_selected:\"\",\r\n    mongodb_selected:\"\",\r\n    collections:[],\r\n    dbs:[],\r\n    allTweetsData:[]  };\r\n  constructor(props){\r\n    super(props)\r\n    this.getData()\r\n \r\n    \r\n  }\r\n\r\n  getData = () => {\r\n   \r\n    //TODO selezione db\r\n\r\n\r\n    axios.get('/tweet/dbs', {\r\n        \r\n    })\r\n    .then((response) => {\r\n      var i =0;\r\n      var dbs = [];\r\n      \r\n      while(i<response.data.databases.length){\r\n        if(response.data.databases[i].name!=='admin'&&response.data.databases[i].name!=='config'\r\n        &&response.data.databases[i].name!=='test'&&response.data.databases[i].name!=='local'){\r\n            dbs.push(response.data.databases[i].name);\r\n        }\r\n        \r\n        i++;\r\n      }\r\n      this.setState({dbs:dbs})\r\n\r\n  })\r\n  .catch((error) => {\r\n    \r\n      console.log('error: ', error)\r\n  });\r\n       \r\n    }\r\n\r\n  getAllData = (data) => {\r\n    this.state.allTweetsData = data;\r\n    \r\n  }\r\n\r\n\r\n    \r\n\r\n\r\n  displaySentimentCharts = () => {\r\n    this.setState({content:1})\r\n  }\r\n \r\n  displayWordCloud = () => {\r\n    this.setState({content:2})\r\n  }\r\n \r\n  displayTimeLines = () => {\r\n    this.setState({content:3})\r\n  }\r\n \r\n  displayTweetList = () => {\r\n    this.setState({content:4})\r\n  }\r\n\r\n  displayMaps = () => {\r\n    this.setState({content:5})\r\n  }\r\n  \r\n  handleDbChange = (db) => {\r\n    this.setState({db_selected:db});\r\n    this.setState({content:6}); //set loading screen    \r\n  }\r\n  \r\n\r\n  handleMongoDbChange = (mongodb) => {\r\n   \r\n    this.setState({mongodb_selected:mongodb});\r\n    axios.get('/tweet/setDbs', {\r\n      params: {\r\n        mongodb: mongodb\r\n      }        \r\n    }).then((response) => {\r\n      \r\n    }).catch((error) => {    \r\n      console.log('error: ', error)\r\n  });\r\n    this.getCollection();\r\n    \r\n  }\r\n\r\n  getCollection = () => {\r\n    axios.get('/tweet/collections', {\r\n        \r\n    })\r\n    .then((response) => {\r\n      var i =0;\r\n      var collections = [];\r\n      while(i<response.data.length){\r\n        \r\n          collections.push(response.data[i].name);\r\n               \r\n        i++;\r\n      }\r\n      this.state.collections = collections;\r\n      \r\n      this.setState({db_selected:null});\r\n      this.setState({db_selected:'Message'});\r\n      this.setState({collections:collections});\r\n      this.setState({content:6}); //set loading screen\r\n\r\n  })\r\n  .catch((error) => {\r\n    \r\n      console.log('error: ', error)\r\n  });\r\n\r\n  }\r\n\r\n\r\n\r\n  export = () => {\r\n    var doc;\r\n    var canvas;\r\n    var canvasImage,canvasImage2,canvasImage3;\r\n    switch(this.state.content){\r\n      case(1): \r\n        doc = new jsPDF();\r\n        canvas = document.getElementsByTagName('canvas');\r\n        canvasImage = canvas[0].toDataURL('image/png',1.0);\r\n        canvasImage2 = canvas[1].toDataURL('image/png',1.0);\r\n        canvasImage3 = canvas[2].toDataURL('image/png',1.0);\r\n  \r\n        doc.addImage(canvasImage,'PNG',5,15,200,85,'alias1');\r\n        doc.addImage(canvasImage2,'PNG',70,110,70,70,'alias2');\r\n        doc.addImage(canvasImage3,'PNG',5,200,200,85,'alias3');  \r\n        doc.save(\"reportSentiments.pdf\");\r\n        break\r\n      case(2): \r\n        doc = new jsPDF('landscape') \r\n        var input = document.getElementById('wordChart');\r\n        html2canvas(input).then((canvas) => {\r\n          const imgData = canvas.toDataURL('image/jpg');\r\n          doc.addImage(imgData, 'JPG', -20,20,350,150,'alias1');\r\n          doc.save(\"wordChart.pdf\");\r\n        });\r\n\r\n        break;\r\n      case(3):\r\n        doc = new jsPDF('landscape') \r\n        canvas = document.getElementsByTagName('canvas');\r\n        canvasImage = canvas[0].toDataURL('image/png',1.0);\r\n        doc.addImage(canvasImage,'PNG',0,50,290,100,'alias1');\r\n        doc.save(\"timeLines.pdf\");\r\n        break;\r\n      case(4):\r\n        \r\n        const tabella = document.getElementById('tabella');\r\n        const pdf = new jsPDF('landscape');\r\n        pdf.html(tabella,{ html2canvas: { scale: 0.2 } }).then(() => {\r\n          pdf.save(\"tabella.pdf\");\r\n        }).catch((error) => {\r\n      \r\n          console.log('error: ', error)\r\n      });\r\n      case(5): \r\n      //bug\r\n      const mappa = document.getElementById('mapCanvas');\r\n      const pdfMappa = new jsPDF('landscape');\r\n      pdfMappa.html(mappa,{ html2canvas: { scale: 0.2 } }).then(() => {\r\n        pdfMappa.save(\"mappa.pdf\");\r\n      }).catch((error) => {\r\n    \r\n        console.log('error: ', error)\r\n    });\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const renderContent = () => {\r\n      \r\n      \r\n      switch(this.state.content){\r\n        case(0):\r\n        return <Home db={this.state.db_selected} mongodb={this.state.mongodb_selected} />;\r\n        case(1): \r\n          return <SentimentCharts db={this.state.db_selected} mongodb={this.state.mongodb_selected} allTweetsData={this.state.allTweetsData}/>;\r\n        case(2): \r\n          return <WordCloud db={this.state.db_selected} mongodb={this.state.mongodb_selected} allTweetsData={this.state.allTweetsData}/>;\r\n        case(3): \r\n          return <TimeLines db={this.state.db_selected} mongodb={this.state.mongodb_selected} allTweetsData={this.state.allTweetsData}/>;\r\n        case(4):\r\n          return <TweetList db={this.state.db_selected} mongodb={this.state.mongodb_selected} allTweetsData={this.state.allTweetsData}/>;\r\n        case(5): \r\n          return <Maps db={this.state.db_selected} mongodb={this.state.mongodb_selected} allTweetsData={this.state.allTweetsData}/>;\r\n        case(6):\r\n          return <LoadingData parentCallback = {this.getAllData.bind(this)} db={this.state.db_selected} mongodb={this.state.mongodb_selected}/>;\r\n      }\r\n    }\r\n\r\n\r\n\r\n \r\n\r\n    return (\r\n      <div>\r\n        <meta charSet=\"UTF-8\" />\r\n        <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>CrowdPulse</title>\r\n        {/* Favicon */}\r\n        {/* Custom styles */}\r\n        <link rel=\"stylesheet\" href=\"./css/style.css\" />\r\n\r\n        <link rel=\"stylesheet\" \r\n      href=\"https://unpkg.com/leaflet@1.5.1/dist/leaflet.css\"\r\n      integrity=\"sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==\"\r\n      crossorigin=\"\"/>\r\n      \r\n        <div className=\"layer\" />\r\n       \r\n        <a className=\"skip-link sr-only\" href=\"#skip-target\">Skip to content</a>\r\n        <div className=\"page-flex\">\r\n\r\n          {/* ! Sidebar */}\r\n          <aside className=\"sidebar\">\r\n            <div className=\"sidebar-start\">\r\n              <div className=\"sidebar-head\">\r\n                <button className=\"sidebar-toggle transparent-btn\" title=\"Menu\" type=\"button\">\r\n                  <span className=\"sr-only\">Toggle menu</span>\r\n                  <span className=\"icon menu-toggle\" aria-hidden=\"true\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"sidebar-body\">\r\n                <ul className=\"sidebar-body-menu\">\r\n                  <li>\r\n                    <a className=\"active\" href=\"/\"><span className=\"icon home\" aria-hidden=\"true\" />Dashboard</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#export\" onClick={() => {this.export()}}><span className=\"icon edit\" aria-hidden=\"true\" />Export</a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"show-cat-btn\" href=\"##\">\r\n                        <span class=\"icon document\" aria-hidden=\"true\"></span>Data Visualization\r\n                        <span class=\"category__btn transparent-btn\" title=\"Open list\">\r\n                            <span class=\"sr-only\">Open list</span>\r\n                            <span class=\"icon arrow-down\" aria-hidden=\"true\"></span>\r\n                        </span>\r\n                    </a>\r\n                    <ul class=\"cat-sub-menu\">\r\n                        <li>\r\n                            <a href=\"#sentiment\"  onClick={() => {this.displaySentimentCharts()}}>Sentiment</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#word\" onClick={() => {this.displayWordCloud()}}>Word</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#timeLines\" onClick={() => {this.displayTimeLines()}}>Timelines</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#tweetlist\" onClick={() => {this.displayTweetList()}}>Tweet List</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#maps\" onClick={() => {this.displayMaps()}}>Maps</a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n\r\n                \r\n                <li>\r\n                    <a class=\"show-cat-btn\" href=\"###\">\r\n                        <span class=\"icon folder\" aria-hidden=\"true\"></span>Database\r\n                        <span class=\"category__btn transparent-btn\" title=\"Open list\">\r\n                            <span class=\"sr-only\">Open list</span>\r\n                            <span class=\"icon arrow-down\" aria-hidden=\"true\"></span>\r\n                        </span>\r\n                    </a>\r\n                  \r\n                      <Dbs data={this.state.dbs} parentCallback = {this.handleMongoDbChange.bind(this)}/>\r\n\r\n\r\n                   \r\n                </li>\r\n\r\n\r\n                <li>\r\n                    <a class=\"show-cat-btn\" href=\"##\">\r\n                        <span class=\"icon folder\" aria-hidden=\"true\"></span>Collections\r\n                        <span class=\"category__btn transparent-btn\" title=\"Open list\">\r\n                            <span class=\"sr-only\">Open list</span>\r\n                            <span class=\"icon arrow-down\" aria-hidden=\"true\"></span>\r\n                        </span>\r\n                    </a>\r\n                  \r\n                      <Collection data={this.state.collections} parentCallback = {this.handleDbChange.bind(this)}/>\r\n\r\n                   \r\n                </li>\r\n                  \r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"sidebar-footer\">\r\n              <ul className=\"sidebar-body-menu\">\r\n                <li>\r\n                  <button className=\"theme-switcher gray-circle-btn\" type=\"button\" title=\"Switch theme\">\r\n                    <span className=\"sr-only\">Switch theme</span>\r\n                    <i className=\"sun-icon\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"white\" class=\"bi bi-brightness-high-fill\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M12 8a4 4 0 1 1-8 0 4 4 0 0 1 8 0zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\r\n                    </svg></i>\r\n                    <i className=\"moon-icon \" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"white\" class=\"bi bi-moon-fill\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z\" />\r\n                    </svg></i>\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </aside>\r\n\r\n\r\n\r\n          {/*<PreLoader />*/}\r\n          {renderContent()}\r\n\r\n        \r\n\r\n        </div>\r\n        {/* Chart library */}\r\n        {/* Icons library */}\r\n        {/* Custom scripts */}\r\n        {/* partial */}\r\n\r\n\r\n        </div>\r\n        \r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\script.js",["139","140","141","142"],"\r\n\r\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n  (function () {\r\n    var sidebar = document.querySelector('.sidebar'),\r\n        catSubMenu = document.querySelector('.cat-sub-menu'),\r\n        sidebarBtns = document.querySelectorAll('.sidebar-toggle');\r\n\r\n    var _iterator = _createForOfIteratorHelper(sidebarBtns),\r\n        _step;\r\n\r\n    try {\r\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\r\n        var sidebarBtn = _step.value;\r\n\r\n        if (sidebarBtn && catSubMenu && sidebarBtn) {\r\n          sidebarBtn.addEventListener('click', function () {\r\n            var _iterator2 = _createForOfIteratorHelper(sidebarBtns),\r\n                _step2;\r\n\r\n            try {\r\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\r\n                var sdbrBtn = _step2.value;\r\n                sdbrBtn.classList.toggle('rotated');\r\n              }\r\n            } catch (err) {\r\n              _iterator2.e(err);\r\n            } finally {\r\n              _iterator2.f();\r\n            }\r\n\r\n            sidebar.classList.toggle('hidden');\r\n            catSubMenu.classList.remove('visible');\r\n          });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      _iterator.e(err);\r\n    } finally {\r\n      _iterator.f();\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var showCatBtns = document.querySelectorAll('.show-cat-btn');\r\n\r\n    if (showCatBtns) {\r\n      showCatBtns.forEach(function (showCatBtn) {\r\n        var catSubMenu = showCatBtn.nextElementSibling;\r\n        showCatBtn.addEventListener('click', function (e) {\r\n          e.preventDefault();\r\n          catSubMenu.classList.toggle('visible');\r\n          var catBtnToRotate = document.querySelector('.category__btn');\r\n          catBtnToRotate.classList.toggle('rotated');\r\n        });\r\n      });\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var showMenu = document.querySelector('.lang-switcher');\r\n    var langMenu = document.querySelector('.lang-menu');\r\n    var layer = document.querySelector('.layer');\r\n\r\n    if (showMenu) {\r\n      showMenu.addEventListener('click', function () {\r\n        langMenu.classList.add('active');\r\n        layer.classList.add('active');\r\n      });\r\n\r\n      if (layer) {\r\n        layer.addEventListener('click', function (e) {\r\n          if (langMenu.classList.contains('active')) {\r\n            langMenu.classList.remove('active');\r\n            layer.classList.remove('active');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var userDdBtnList = document.querySelectorAll('.dropdown-btn');\r\n    var userDdList = document.querySelectorAll('.users-item-dropdown');\r\n    var layer = document.querySelector('.layer');\r\n\r\n    if (userDdList && userDdBtnList) {\r\n      var _iterator3 = _createForOfIteratorHelper(userDdBtnList),\r\n          _step3;\r\n\r\n      try {\r\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\r\n          var userDdBtn = _step3.value;\r\n          userDdBtn.addEventListener('click', function (e) {\r\n            layer.classList.add('active');\r\n\r\n            var _iterator4 = _createForOfIteratorHelper(userDdList),\r\n                _step4;\r\n\r\n            try {\r\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\r\n                var userDd = _step4.value;\r\n\r\n                if (e.currentTarget.nextElementSibling == userDd) {\r\n                  if (userDd.classList.contains('active')) {\r\n                    userDd.classList.remove('active');\r\n                  } else {\r\n                    userDd.classList.add('active');\r\n                  }\r\n                } else {\r\n                  userDd.classList.remove('active');\r\n                }\r\n              }\r\n            } catch (err) {\r\n              _iterator4.e(err);\r\n            } finally {\r\n              _iterator4.f();\r\n            }\r\n          });\r\n        }\r\n      } catch (err) {\r\n        _iterator3.e(err);\r\n      } finally {\r\n        _iterator3.f();\r\n      }\r\n    }\r\n\r\n    if (layer) {\r\n      layer.addEventListener('click', function (e) {\r\n        var _iterator5 = _createForOfIteratorHelper(userDdList),\r\n            _step5;\r\n\r\n        try {\r\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\r\n            var userDd = _step5.value;\r\n\r\n            if (userDd.classList.contains('active')) {\r\n              userDd.classList.remove('active');\r\n              layer.classList.remove('active');\r\n            }\r\n          }\r\n        } catch (err) {\r\n          _iterator5.e(err);\r\n        } finally {\r\n          _iterator5.f();\r\n        }\r\n      });\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    //Chart.defaults.backgroundColor = '#000';\r\n    var darkMode = localStorage.getItem('darkMode');\r\n    var darkModeToggle = document.querySelector('.theme-switcher');\r\n\r\n    var enableDarkMode = function enableDarkMode() {\r\n      document.body.classList.add('darkmode');\r\n      localStorage.setItem('darkMode', 'enabled');\r\n    };\r\n\r\n    var disableDarkMode = function disableDarkMode() {\r\n      document.body.classList.remove('darkmode');\r\n      localStorage.setItem('darkMode', null);\r\n    };\r\n\r\n    if (darkMode === 'enabled') {\r\n      enableDarkMode();\r\n    }\r\n\r\n    if (darkModeToggle) {\r\n      darkModeToggle.addEventListener('click', function () {\r\n        darkMode = localStorage.getItem('darkMode');\r\n\r\n        if (darkMode !== 'enabled') {\r\n          enableDarkMode();\r\n        } else {\r\n          disableDarkMode();\r\n        }\r\n\r\n      \r\n      });\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var checkAll = document.querySelector('.check-all');\r\n    var checkers = document.querySelectorAll('.check');\r\n\r\n    if (checkAll && checkers) {\r\n      checkAll.addEventListener('change', function (e) {\r\n        var _iterator6 = _createForOfIteratorHelper(checkers),\r\n            _step6;\r\n\r\n        try {\r\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\r\n            var checker = _step6.value;\r\n\r\n            if (checkAll.checked) {\r\n              checker.checked = true;\r\n              checker.parentElement.parentElement.parentElement.classList.add('active');\r\n            } else {\r\n              checker.checked = false;\r\n              checker.parentElement.parentElement.parentElement.classList.remove('active');\r\n            }\r\n          }\r\n        } catch (err) {\r\n          _iterator6.e(err);\r\n        } finally {\r\n          _iterator6.f();\r\n        }\r\n      });\r\n\r\n      var _iterator7 = _createForOfIteratorHelper(checkers),\r\n          _step7;\r\n\r\n      try {\r\n        var _loop = function _loop() {\r\n          var checker = _step7.value;\r\n          checker.addEventListener('change', function (e) {\r\n            checker.parentElement.parentElement.parentElement.classList.toggle('active');\r\n\r\n            if (!checker.checked) {\r\n              checkAll.checked = false;\r\n            }\r\n\r\n            var totalCheckbox = document.querySelectorAll('.users-table .check');\r\n            var totalChecked = document.querySelectorAll('.users-table .check:checked');\r\n\r\n            if (totalCheckbox && totalChecked) {\r\n              if (totalCheckbox.length == totalChecked.length) {\r\n                checkAll.checked = true;\r\n              } else {\r\n                checkAll.checked = false;\r\n              }\r\n            }\r\n          });\r\n        };\r\n\r\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\r\n          _loop();\r\n        }\r\n      } catch (err) {\r\n        _iterator7.e(err);\r\n      } finally {\r\n        _iterator7.f();\r\n      }\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var checkAll = document.querySelector('.check-all');\r\n    var checkers = document.querySelectorAll('.check');\r\n    var checkedSum = document.querySelector('.checked-sum');\r\n\r\n    if (checkedSum && checkAll && checkers) {\r\n      checkAll.addEventListener('change', function (e) {\r\n        var totalChecked = document.querySelectorAll('.users-table .check:checked');\r\n        checkedSum.textContent = totalChecked.length;\r\n      });\r\n\r\n      var _iterator8 = _createForOfIteratorHelper(checkers),\r\n          _step8;\r\n\r\n      try {\r\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\r\n          var checker = _step8.value;\r\n          checker.addEventListener('change', function (e) {\r\n            var totalChecked = document.querySelectorAll('.users-table .check:checked');\r\n            checkedSum.textContent = totalChecked.length;\r\n          });\r\n        }\r\n      } catch (err) {\r\n        _iterator8.e(err);\r\n      } finally {\r\n        _iterator8.f();\r\n      }\r\n    }\r\n  })();\r\n\r\n});","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\SentimentCharts.js",["143","144"],"\r\nimport BarChart from './Charts/BarChart';\r\nimport PieChart from './Charts/PieChart';\r\nimport MultiLineChart from './Charts/MultiTimeLineChart';\r\nimport Filters from './Filters/SentimentFilters';\r\nimport React from 'react';\r\nimport PreLoader from \"./preloader\";\r\n\r\n\r\n\r\n\r\nclass SentimentCharts extends React.Component {\r\n\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      totalTweets: 0,\r\n      flagType: 0,\r\n      counter : [],\r\n      dataGroupByDates:[],\r\n      flag:0\r\n\r\n      }\r\n\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n  if(prevProps.db!==this.props.db){\r\n    this.setState({flag:0})\r\n  }\r\n  \r\n}\r\n    handleQuery = (dataGroupByDates,counter) => {\r\n      \r\n      this.setState({counter:counter})\r\n      this.state.counter = counter\r\n      \r\n      this.setState({dataGroupByDates:dataGroupByDates})\r\n      this.state.dataGroupByDates = dataGroupByDates\r\n      this.setState({flag:1})\r\n      \r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n      render () {\r\n        var body;\r\n\r\n        if(this.state.flag>0){\r\n\r\n           body=  \r\n          <>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-9\">\r\n              <div className=\"chart\">\r\n              <BarChart  negative={this.state.counter.negative}\r\n          neutral={this.state.counter.neutral}\r\n          positive={this.state.counter.positive}/>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <div className=\"chart\">\r\n                <PieChart\r\n                negative={this.state.counter.negative}\r\n                neutral={this.state.counter.neutral}\r\n                positive={this.state.counter.positive} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"chart\">\r\n              <MultiLineChart  data={this.state.dataGroupByDates}/>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n          </>\r\n        }else{\r\n          body=\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n            <div className=\"chart\"> <PreLoader/></div>\r\n          </div>\r\n          </div>\r\n        }\r\n          return(\r\n            \r\n        <div className=\"main-wrapper\">\r\n\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Sentiment - {this.props.mongodb} </h3>\r\n            <br/>\r\n            <Filters parentCallback = {this.handleQuery.bind(this)} db={this.props.db} tweetsData={this.props.allTweetsData}/>\r\n            <br/>\r\n              {body}\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default SentimentCharts","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Maps.js",["145","146"],"//https://react-leaflet.js.org/docs/start-installation/\r\n\r\nimport Filters from './Filters/Filters'\r\nimport React from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport PreLoader from \"./preloader\";\r\n\r\n \r\n\r\n\r\nclass Maps extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    \r\n\r\n    this.state = {\r\n      data:[],\r\n      markers : [],\r\n      flag:0\r\n\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.db!==this.props.db){\r\n      this.setState({flag:0})\r\n    }\r\n    \r\n  }\r\n\r\n  handleQuery = (data) => {\r\n    \r\n    this.setState({data:data})\r\n    this.state.data = data\r\n    this.query()\r\n    this.setState({flag:1})\r\n  \r\n  }\r\n\r\n      query = () => {\r\n        var i = 0\r\n       \r\n        var markers = []\r\n        \r\n        \r\n        while(i<this.state.data.length){\r\n          if(this.state.data[i].geo!==undefined){\r\n            \r\n            console.log(this.state.data[i].geo)\r\n\r\n            if(this.state.data[i].geo.coordinates!==undefined){\r\n\r\n              markers.push({\r\n                lat:this.state.data[i].geo.coordinates.latitude,\r\n                lng:this.state.data[i].geo.coordinates.longitude,\r\n                text:this.state.data[i].raw_text,\r\n                author:this.state.data[i].author_username\r\n              })\r\n             \r\n            }else{\r\n              //trasformare luoghi in coordinate\r\n\r\n            }\r\n            \r\n            i++\r\n          }else{\r\n            i++\r\n          }\r\n        }\r\n        \r\n        this.setState({markers:markers})\r\n        this.state.markers=markers\r\n\r\n      \r\n\r\n        \r\n        \r\n      }\r\n    \r\n      render () {\r\n        var body;\r\n\r\n        if(this.state.flag>0){\r\n\r\n           body=              <div className=\"row\">\r\n           <div className=\"col-lg-12\">\r\n             <div className=\"chart\" id=\"mapCanvas\">\r\n             <MapContainer center={[41.29246 ,13.5736108]} zoom={6} scrollWheelZoom={false}>\r\n             {this.state.markers.map((city, idx) => (\r\n             <Marker\r\n               position={[city.lat, city.lng]}\r\n               city = \"Rome\"\r\n               key={idx}\r\n             >\r\n               <Popup>\r\n                 <b>\r\n                   {city.author}, {city.text}\r\n                 </b>\r\n               </Popup>\r\n             </Marker>))}\r\n                 <TileLayer\r\n                     attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n\r\n             </MapContainer>\r\n             </div>\r\n           </div>\r\n\r\n         </div>\r\n        }else{\r\n          body=\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n            <div className=\"chart\"> <PreLoader/></div>\r\n          </div>\r\n          </div>\r\n        }\r\n          return(\r\n        <div className=\"main-wrapper\">\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Maps - {this.props.mongodb} </h3>\r\n            <br/>\r\n            <Filters parentCallback = {this.handleQuery.bind(this)} db = {this.props.db}  tweetsData={this.props.allTweetsData}/>\r\n            <br/>\r\n            {body}\r\n\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default Maps","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Collection.js",["147"],"import React from 'react';\r\n\r\nclass Collection extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.handleDbChange = this.handleDbChange.bind(this)\r\n       \r\n        console.log(props.data)\r\n    }\r\n\r\n    handleDbChange = (db) => {\r\n        \r\n        this.props.parentCallback(db);  \r\n            \r\n      }\r\n\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <ul class=\"cat-sub-menu\">\r\n            {this.props.data.map((object, i)=>{\r\n                return <li>\r\n                <a href=\"#\" onClick={() => {this.handleDbChange(object)}}>{object}</a>\r\n            </li>;\r\n            \r\n            })}\r\n                               \r\n        </ul>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Collection;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\TweetList.js",["148","149"],"import Filters from './Filters/Filters'\r\nimport React from 'react';\r\nimport DisplayTable from './Table/TweetsTable';\r\nimport PreLoader from \"./preloader\";\r\n\r\nclass TweetList extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n          totalTweets: 0,\r\n          data: [],\r\n          flag:0\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.db!==this.props.db){\r\n        this.setState({flag:0})\r\n      }\r\n      \r\n    }\r\n\r\n    handleQuery = (data) => {\r\n    \r\n      this.setState({data:data})\r\n      this.state.data = data\r\n      this.state.totalTweets = data.length\r\n      \r\n      this.setState({flag:1})\r\n    \r\n    }\r\n\r\n\r\n   \r\n    \r\n      render () {\r\n        var body;\r\n        if(this.state.flag>0){\r\n          body=<div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"chart\">\r\n              <DisplayTable data={this.state.data}/>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        }else{\r\n          body= <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n          <div className=\"chart\"> <PreLoader/></div>\r\n        </div>\r\n        </div>\r\n        }\r\n          return(\r\n        <div className=\"main-wrapper\">\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Tweet List - {this.props.mongodb} </h3>\r\n            <br/>\r\n            <Filters parentCallback = {this.handleQuery.bind(this)} db= {this.props.db} tweetsData={this.props.allTweetsData} />\r\n            <br/>\r\n\r\n            {body}\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default TweetList","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\WordCloud.js",["150","151"],"import React from 'react';\r\nimport ReactWordcloud from 'react-wordcloud';\r\nimport Filters from './Filters/Filters'\r\nimport PreLoader from \"./preloader\";\r\n\r\nclass WordCloud extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n          data:[],\r\n          words:[{\r\n            text:null,\r\n            value:null\r\n          }],\r\n          flag:0\r\n\r\n      }\r\n\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.db!==this.props.db){\r\n        this.setState({flag:0})\r\n      }\r\n      \r\n    }\r\nhandleQuery = (data) => {\r\n    \r\n    this.setState({data:data})\r\n    this.state.data = data\r\n    this.query()\r\n\r\n\r\n  }\r\n\r\n \r\n      query = () =>{\r\n\r\n        var i = 0\r\n        var j = 0\r\n        var k = 0\r\n       \r\n        var words=[{\r\n            text:null,\r\n            value:0\r\n        }]\r\n\r\n        var temp = null\r\n\r\n        var arrayWords = []\r\n\r\n        var flag = false\r\n\r\n        \r\n\r\n       \r\n        while(i<this.state.data.length){\r\n          j=0;\r\n         \r\n          if(this.state.data[i].spacy!==undefined){\r\n            while(j<this.state.data[i].spacy.processed_text.length){\r\n              temp=this.state.data[i].spacy.processed_text[j].split(\" \")[0]\r\n            \r\n             if(this.checkWord(temp)===false&&this.state.data[i].spacy.processed_text[j].split(\" \")[3]!=='CCONJ'\r\n              ){\r\n                k=0\r\n              flag = false\r\n              while(k<arrayWords.length){\r\n                if(arrayWords[k]===temp){\r\n                  flag=true\r\n                  break\r\n                }\r\n                k++\r\n              }\r\n              if(flag===true){\r\n                words[k].value++\r\n              }else{\r\n                arrayWords.push(temp)\r\n  \r\n                words.push({\r\n                  text:temp,\r\n                  value:1\r\n                })\r\n                  \r\n              }\r\n              }\r\n              \r\n   \r\n                \r\n              j++\r\n            }\r\n          }\r\n\r\n         i++\r\n         \r\n        }\r\n        this.state.words=words.slice(0,200)\r\n        this.setState({words:words.slice(0,200)})\r\n        console.log(this.state.words.length)\r\n        this.setState({flag:1})\r\n\r\n      }\r\n   \r\n      checkWord = (temp) => {\r\n\r\n        //check if string is a tag \r\n        if(temp[0]==='@'){\r\n          return true\r\n        }\r\n    \r\n        //check if string is a number\r\n        if(!isNaN(+temp)){\r\n          return true\r\n        }\r\n        \r\n        //check if string is a url\r\n\r\n        //controllo url rimosso per migliorare le\r\n        /*\r\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\r\n          '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\r\n          '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\r\n          '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\r\n          '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\r\n          '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\r\n  \r\n        if(pattern.test(temp)){\r\n          return true\r\n        }\r\n        */\r\n\r\n        return false\r\n        \r\n      }\r\n    \r\n      render () {\r\n        var body;\r\n        if(this.state.flag>0){\r\n          body =<div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"chart\" id=\"wordChart\">\r\n            <ReactWordcloud words={this.state.words}       options={{\r\n        fontFamily: 'monospace',\r\n        fontSizes: [10, 50],\r\n      }} />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        }else{\r\n          body=\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n            <div className=\"chart\"> <PreLoader/></div>\r\n          </div>\r\n          </div>\r\n        }\r\n          return(\r\n        <div className=\"main-wrapper\">\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Word Cloud - {this.props.mongodb} </h3>\r\n            <br/>\r\n            <Filters parentCallback = {this.handleQuery.bind(this)} db = {this.props.db}  tweetsData={this.props.allTweetsData}/>\r\n            <br/>\r\n\r\n            {body}\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default WordCloud","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\TimeLines.js",["152","153","154"],"import Filters from './Filters/TimeLinesFilters';\r\nimport React from 'react';\r\nimport TimeLineChart from './Charts/TimeLineChart';\r\nimport PreLoader from \"./preloader\";\r\n\r\n\r\nclass TweetList extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n          totalTweets: 0,\r\n          flagType: 0,\r\n          counter : [],\r\n          data: [],\r\n          dataGroupByDates:[],\r\n          flag:0\r\n\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.db!==this.props.db){\r\n        this.setState({flag:0})\r\n      }\r\n      \r\n    }\r\n\r\n    handleQuery = (data) => {\r\n    \r\n      this.setState({data:data})\r\n      this.state.data = data\r\n      this.state.totalTweets = data.length\r\n      this.query()\r\n      this.setState({flag:1})\r\n    \r\n    }\r\n  \r\n\r\n      query = () =>{\r\n        var dataGroupByDates=[{\r\n          id:null,\r\n          counter:null\r\n        }]\r\n\r\n        var i = 0\r\n        var j = 0\r\n        \r\n        if(this.state.data.length!==0){\r\n          var dt = this.state.data[0].created_at.substring(0, 10)\r\n          dataGroupByDates[0].id=dt\r\n\r\n          while(i<this.state.data.length){\r\n\r\n            if(dataGroupByDates[j].id===this.state.data[i].created_at.substring(0, 10)){\r\n              dataGroupByDates[j].counter++\r\n            }else{\r\n                j++\r\n                dataGroupByDates.push({\r\n                  id :this.state.data[i].created_at.substring(0, 10),\r\n                  counter:0\r\n                })\r\n           \r\n            }\r\n            i++\r\n          }\r\n          \r\n        }\r\n\r\n        this.setState({dataGroupByDates : dataGroupByDates})\r\n        this.state.dataGroupByDates=dataGroupByDates\r\n        \r\n      }\r\n   \r\n    \r\n      render () {\r\n        var body;\r\n\r\n        if(this.state.flag>0){\r\n          body=            <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"chart\">\r\n              <TimeLineChart data={this.state.dataGroupByDates}/>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        }else{\r\n          body=\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n            <div className=\"chart\"> <PreLoader/></div>\r\n          </div>\r\n          </div>\r\n        }\r\n          return(\r\n        <div className=\"main-wrapper\">\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Time Line - {this.props.mongodb} </h3>\r\n            <br/>\r\n           <Filters  parentCallback = {this.handleQuery.bind(this)} db={this.props.db} tweetsData={this.props.allTweetsData} /> \r\n            <br/>\r\n            {body}\r\n\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default TweetList","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Dbs.js",["155"],"import React from 'react';\r\n\r\nclass Dbs extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.handleMongoDbChange = this.handleMongoDbChange.bind(this)\r\n\r\n        }\r\n\r\n    handleMongoDbChange = (db) => {\r\n\r\n        this.props.parentCallback(db);  \r\n            \r\n      }\r\n\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <ul class=\"cat-sub-menu\">\r\n\r\n            \r\n\r\n            {this.props.data.map((object, i)=>{\r\n                return <li>\r\n                <a href=\"#\" onClick={() => {this.handleMongoDbChange(object)}}>{object}</a>\r\n            </li>;\r\n            \r\n            })}\r\n                               \r\n        </ul>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Dbs;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Home.js",["156","157","158"],"import React from 'react';\r\nimport dbImg from '../img/1.jpg';\r\nimport dataImg from '../img/2.jpg';\r\nimport queryImg from '../img/3.jpg';\r\nclass Home extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n\r\n                        \r\n        <div className=\"main-wrapper\">\r\n\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1 className=\"homeTitle\">CrowdPulse Dashboard</h1>\r\n            <br/><br/><br/><br/><br/><br/><br/>\r\n            <h3>Hai selezionato  il db : {this.props.mongodb} </h3><br/><br/><br/>\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-lg-4 howBox\">\r\n\r\n                    <div className=\"how\">\r\n                        <img src={dbImg}/>\r\n                        <br/>\r\n                    <b>1</b><br/>\r\n\r\n                        Seleziona il Db che vuoi analizzare    \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-4 howBox\">\r\n                    <div className=\"how\">\r\n                    <img src={dataImg}/>\r\n                    <br/>\r\n                       <b>2</b>\r\n                       <br/>\r\n\r\n                        Selezioni i grafici che ti interessano\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-4 howBox\">\r\n                    <div className=\"how\">\r\n                    <img src={queryImg}/>\r\n                    <br/>\r\n                    <b>3</b>\r\n                       <br/>\r\n                        Utilizza i filtri per essere più preciso \r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n\r\n\r\n      \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Home;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\LoadingData.js",["159","160","161","162","163"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\preloader.js",["164","165","166"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./preloader.css\";\r\n\r\nfunction PreLoader() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setloading] = useState(undefined);\r\n  const [completed, setcompleted] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setloading(false);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!completed ? (\r\n        <>\r\n          {!loading ? (\r\n            <div className=\"spinner\">\r\n              <span>Loading...</span>\r\n              <div className=\"half-spinner\"></div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"completed\">&#x2713;</div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PreLoader;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\Filters.js",["167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"import axios from 'axios';\r\nimport SearchFilters from './SearchFilters';\r\nimport SearchText from './SearchText';\r\nimport SearchHashtag from './SearchHashtag';\r\nimport React, { useEffect } from 'react';\r\n\r\n\r\nclass Filters extends React.Component{\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.query=this.query.bind(this)\r\n\r\n        this.state = {\r\n          totalTweets: 0,\r\n          flagType: 0,\r\n          flagSentiment : 0,\r\n          counter : [],\r\n          oldData : [],\r\n          data: [],\r\n          tags : [],\r\n          text : [],\r\n          hashtags : [],\r\n          fromDate: null,\r\n          toDate : null,\r\n\r\n      }\r\n     \r\n      this.getData(this.props.tweetsData.dataTweet.data);\r\n   \r\n\r\n      this.state.totalTweets = this.props.tweetsData.dataTweet.data.length;\r\n      \r\n      this.query()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.mongodb!==this.props.mongodb){\r\n        this.getData(this.props.tweetsData.dataTweet.data)\r\n      }\r\n      \r\n    }\r\n\r\n    getData = (Alldata) => {\r\n           \r\n          const data = Alldata;\r\n          this.state.data = Alldata;\r\n          this.state.oldData = Alldata\r\n          \r\n          this.setState({totalTweets : data.length})\r\n          this.query()\r\n\r\n      }    \r\n      \r\n    \r\n      //DATES FILTERS\r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n         \r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n      filterDataByDates = () => {   \r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.state.data = tempData//set Data\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.state.data = tempData //save filtered datas\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n         this.state.data = tempData //set Data\r\n    \r\n          }\r\n\r\n          this.handleQuery()\r\n    \r\n    \r\n      }\r\n\r\n      //END DATES FILTERS\r\n      \r\n      //TAGS SECTION\r\n\r\n      handleTags = (tags) => {\r\n        if(tags.length>this.state.tags.length){\r\n          this.state.tags = tags\r\n          this.filterByTags(tags)\r\n          this.handleQuery()\r\n        }else{\r\n          this.state.tags = tags\r\n          this.resetFilter()\r\n\r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].tags!==undefined){\r\n            while(j<this.state.data[i].tags.tag_me.length){\r\n              temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n            \r\n              while(k<tags.length){\r\n                if(temp.some(a => a.includes(tags[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n\r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n/// TEXT SECTION\r\n\r\nhandleText = (text) => {\r\n  if(text.length>this.state.text.length){\r\n\r\n    this.state.text=text \r\n    this.filterByText(text)\r\n    this.handleQuery()\r\n  }else{\r\n   this.state.text=text \r\n   this.resetFilter()\r\n  }\r\n}\r\n\r\n      filterByText = (text) => {\r\n\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].spacy!==undefined){\r\n            while(j<this.state.data[i].spacy.processed_text.length){\r\n              temp=this.state.data[i].spacy.processed_text[j].split(\" \")\r\n            \r\n              while(k<text.length){\r\n                if(temp.some(a => a.includes(text[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n\r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n  /// HASHTAGS SECTION\r\n\r\n  handleHashtags = (hashtags) => {\r\n    if(hashtags.length>this.state.hashtags.length){\r\n      this.state.hashtags=hashtags\r\n      this.filterByHashtags(hashtags)\r\n      this.handleQuery()\r\n    }else{\r\n      this.state.hashtags=hashtags\r\n      this.resetFilter()\r\n    }\r\n  }\r\n      filterByHashtags = (hashtags) => {\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n\r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].twitter_entities!==undefined){\r\n            if(this.state.data[i].twitter_entities.hashtags!==undefined){\r\n              while(j<this.state.data[i].twitter_entities.hashtags.length){\r\n                temp=this.state.data[i].twitter_entities.hashtags[j]\r\n               \r\n                while(k<hashtags.length){\r\n                  if(temp===hashtags[k].name){\r\n                    flag = true               \r\n                  }else{\r\n                    flag = false\r\n                  }\r\n                  k++\r\n                }\r\n    \r\n                if(flag===true){\r\n                  tempData[z]= this.state.data[i]\r\n                  z++\r\n                }\r\n                k=0\r\n                j++\r\n              }\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n               \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n      }\r\n\r\n      //RESET SECTIOn\r\n      resetFilter = () => {\r\n\r\n        \r\n\r\n        this.state.data= this.state.oldData\r\n\r\n        if(this.state.fromDate!==null || this.state.toDate!==null ){\r\n          this.filterDataByDates()\r\n        }\r\n        \r\n        if(this.state.tags.length!==0){\r\n          this.filterByTags(this.state.tags)\r\n        }\r\n\r\n        if(this.state.hashtags.length!==0){\r\n          this.filterByHashtags(this.state.hashtags)\r\n        }\r\n\r\n        if(this.state.text.length!==0){\r\n          this.filterByText(this.state.text)\r\n        }\r\n\r\n        this.handleQuery()\r\n\r\n      }\r\n\r\n            // CATEGORY\r\n      handleCategory = (event) => {\r\n\r\n        if(this.state.flagType!==0 && this.state.flagSentiment!==0){\r\n          this.state.flagType = event.target.value ;  \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n          this.filterByCategory();\r\n        }else if(event.target.value===0 && this.state.flagSentiment===0){\r\n          \r\n          this.state.flagType = event.target.value ; \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n          \r\n        }else{\r\n          this.state.flagType = event.target.value ;  \r\n          this.filterByCategory();     \r\n        }\r\n\r\n        \r\n      }\r\n\r\n      handleSentiment = (event) => {\r\n        if(this.state.flagType!==0 && this.state.flagSentiment!==0){\r\n          this.state.flagSentiment = event.target.value ; \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n          this.filterByCategory();\r\n        }else if(this.state.flagType==0 && event.target.value==0){\r\n         \r\n          this.state.flagSentiment = event.target.value ; \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n         \r\n        }else{\r\n          this.state.flagSentiment = event.target.value ;  \r\n          this.filterByCategory();     \r\n        } \r\n        \r\n      }\r\n\r\n      filterByCategory = () => {\r\n\r\n        var i=0;\r\n        var k = 0;\r\n        var temp = []\r\n        var flagAll = 0;\r\n        \r\n        if (this.state.flagType===0 || this.state.flagType==='0') { \r\n          \r\n          if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                    flagAll = 1;\r\n                  }\r\n                }\r\n                \r\n                if(this.state.data[i].sentiment['feel-it']!==undefined && flagAll===0){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              flagAll=0;\r\n              i++;\r\n            }\r\n\r\n          \r\n\r\n            \r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='neutral'){\r\n                    flagAll = 1;\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n \r\n                }\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined  && flagAll===0){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='neutral'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              flagAll=0;\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='negative'){\r\n                    flagAll = 1;\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n                  \r\n                     \r\n                }\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined  && flagAll===0){\r\n                 \r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='negative'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              i++;\r\n              flagAll=0;\r\n            }\r\n\r\n          }\r\n\r\n          \r\n\r\n\r\n          //Category Sent-it\r\n\r\n\r\n        } \r\n        \r\n        else if(this.state.flagType===1 || this.state.flagType==='1'){\r\n\r\n          if (this.state.flagSentiment===0 || this.state.flagSentiment==='0'){\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  temp[k]=this.state.data[i];\r\n                  k++;   \r\n                }\r\n             }\r\n            i++;\r\n          }\r\n          }else if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            \r\n\r\n            while(i<this.state.data.length){\r\n              \r\n              if(this.state.data[i].sentiment!==undefined){\r\n                \r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  \r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n                         \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n           \r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='neutral'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }         \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='negative')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }\r\n          \r\n\r\n\r\n\r\n          //Category Feel-it\r\n         \r\n        }else{\r\n\r\n          if (this.state.flagSentiment===0 || this.state.flagSentiment==='0'){\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  temp[k]=this.state.data[i];\r\n                  k++;   \r\n                }\r\n             }\r\n            i++;\r\n          }\r\n          }else if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='positive')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='neutral')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='negative')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }\r\n\r\n         \r\n\r\n      }\r\n      \r\n      this.state.data = temp\r\n      this.handleQuery();\r\n\r\n    }\r\n\r\n      \r\n\r\n\r\n   \r\n      //QUERY SECTIOn\r\n\r\n      handleQuery = () =>{\r\n        if(this.state.data.length===0){\r\n          \r\n          this.state.totalTweets=0\r\n          this.query()\r\n          \r\n        }else{\r\n          \r\n          this.state.totalTweets=this.state.data.length\r\n          this.query()\r\n        }\r\n      }\r\n\r\n      query = () =>{\r\n        this.props.parentCallback(this.state.data);\r\n      }\r\n      \r\n      \r\n\r\n    \r\n    render(){\r\n        return(      \r\n          <>      \r\n        <div className=\"row stat-cards\">\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Algorithm</h4><br />\r\n                          <select id=\"sel1\" onChange={this.handleCategory} >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Sent-it</option>\r\n                            <option value=\"2\">Feel-it</option>\r\n\r\n                          </select>\r\n\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Sentiment</h4><br />\r\n                          <select id=\"sel1\" onChange={this.handleSentiment} >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Positive</option>\r\n                            <option value=\"2\">Neutral</option>\r\n                            <option value=\"3\">Negative</option>\r\n                          </select>\r\n\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>From </h4><br />\r\n                    <input type=\"date\" \r\n                    name=\"startDate\"\r\n                    onBlur={this.handleFromDatesChanges}/>\r\n\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>To </h4><br />\r\n                    <input type=\"date\"\r\n                    id=\"toDate\"\r\n                    onBlur={this.handleToDatesChanges} />\r\n                  </center>\r\n                </div>\r\n              </div> \r\n          \r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Total Tweets</h4><br />\r\n                     <h1> {this.state.totalTweets} </h1>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <div className=\"row stat-cards\">\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Tags</h4><br />\r\n                  <SearchFilters parentCallback = {this.handleTags.bind(this)} db = {this.props.db} allTags = {this.props.tweetsData.dataTags}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Processed Text</h4><br />\r\n                  <SearchText parentCallback = {this.handleText.bind(this)} db = {this.props.db}  allText = {this.props.tweetsData.dataText}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Hashtags</h4><br />\r\n                  <SearchHashtag parentCallback = {this.handleHashtags.bind(this)} db = {this.props.db} allHashtags = {this.props.tweetsData.dataHashtags}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      </>)\r\n    }\r\n}\r\n\r\nexport default Filters","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SentimentFilters.js",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242"],"import axios from 'axios';\r\nimport SearchFilters from './SearchFilters';\r\nimport React from 'react';\r\nimport SearchText from './SearchText';\r\nimport SearchHashtag from './SearchHashtag';\r\n\r\nclass Filters extends React.Component{\r\n    constructor (props) {\r\n        super(props)\r\n        this.sendData=this.sendData.bind(this)\r\n\r\n        this.state = {\r\n            totalTweets: 0,\r\n            flagType: 0,\r\n            counter : [],\r\n            oldData : [],\r\n            data: [],\r\n            tags : [],\r\n            text : [],\r\n            hashtags : [],\r\n            dataGroupByDates: [],\r\n            fromDate: null,\r\n            toDate : null,\r\n\r\n        }\r\n      \r\n        \r\n        this.getSentimentData(this.props.tweetsData.dataTweet.data)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.mongodb!==this.props.mongodb){\r\n        this.getSentimentData(this.props.tweetsData.dataTweet.data)\r\n      }\r\n      \r\n    }\r\n\r\n    getSentimentData = (data) => {\r\n\r\n          \r\n          var negative = 0\r\n          var positive = 0\r\n          var neutral = 0\r\n          var i=0\r\n          this.state.totalTweets = data.length\r\n          while(i<data.length){\r\n            if(data[i].sentiment!==undefined){\r\n              if(data[i].sentiment['sent-it']!==undefined){\r\n                if (data[i].sentiment['sent-it'].sentiment==='negative')\r\n                  negative++\r\n                else if (data[i].sentiment['sent-it'].sentiment==='positive')\r\n                  positive ++\r\n                else\r\n                neutral ++\r\n              }\r\n            }\r\n   \r\n              i++\r\n          }\r\n          i=0\r\n          while(i<data.length){\r\n            if(data[i].sentiment!==undefined){\r\n              if(data[i].sentiment['feel-it']!==undefined){\r\n                if (data[i].sentiment['feel-it'].sentiment==='negative')\r\n                  negative++\r\n                else if (data[i].sentiment['feel-it'].sentiment==='positive')\r\n                  positive ++\r\n                else\r\n                neutral ++\r\n              }\r\n\r\n            }\r\n\r\n    \r\n            i++\r\n        }\r\n    \r\n          var tempCounter = {\r\n              positive: positive,\r\n              negative: negative,\r\n              neutral: neutral,\r\n           }\r\n    \r\n    \r\n          this.setState({ counter: tempCounter })\r\n          this.state.counter = tempCounter;\r\n          this.setState({data : data})\r\n          this.state.data = data;\r\n          this.setState({oldData : data})\r\n          this.state.oldData = data;\r\n\r\n          \r\n\r\n          var dataGroupByDates=[{\r\n            id:null,\r\n            counterPositive:null,\r\n            counterNegative:null,\r\n            counterNeutral:null,\r\n          }]\r\n    \r\n          \r\n          var j = 0\r\n          \r\n          if(this.state.data.length!==0){\r\n            var i =this.state.data.length-1\r\n            var dt = this.state.data[i].created_at.substring(0, 10)\r\n            dataGroupByDates[0].id=dt\r\n            i--\r\n            while(i>-1){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n              \r\n              if(dataGroupByDates[j].id===this.state.data[i].created_at.substring(0, 10)){\r\n                if( this.state.data[i].sentiment['feel-it'].sentiment==='positive'){\r\n                  dataGroupByDates[j].counterPositive++\r\n                }else if( this.state.data[i].sentiment['feel-it'].sentiment==='negative'){\r\n                  dataGroupByDates[j].counterNegative++\r\n                }else if( this.state.data[i].sentiment['feel-it'].sentiment==='neutral'){\r\n                  dataGroupByDates[j].counterNeutral++\r\n                }\r\n    \r\n    \r\n              }else{\r\n                j++\r\n    \r\n                dataGroupByDates.push({\r\n                  id:this.state.data[i].created_at.substring(0, 10),\r\n                  counterPositive:0,\r\n                  counterNegative:0,\r\n                  counterNeutral:0,\r\n                })\r\n                if( this.state.data[i].sentiment['feel-it'].sentiment==='positive'){\r\n                  dataGroupByDates[j].counterPositive++\r\n                }else if( this.state.data[i].sentiment['feel-it'].sentiment==='negative'){\r\n                  dataGroupByDates[j].counterNegative++\r\n                }else if( this.state.data[i].sentiment['feel-it'].sentiment==='neutral'){\r\n                  dataGroupByDates[j].counterNeutral++\r\n                }\r\n              }\r\n            }\r\n          }\r\n              i--\r\n            }\r\n            \r\n          }\r\n    \r\n          this.setState({dataGroupByDates : dataGroupByDates})\r\n          this.state.dataGroupByDates=dataGroupByDates     \r\n                      \r\n          this.sendData()\r\n      }    \r\n      \r\n    \r\n      //DATES FILTERS\r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n         \r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n      filterDataByDates = () => {   \r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.state.data = tempData//set Data\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.state.data = tempData //save filtered datas\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n         this.state.data = tempData //set Data\r\n    \r\n          }\r\n\r\n          this.handleQuery()\r\n    \r\n    \r\n      }\r\n\r\n      //END DATES FILTERS\r\n    \r\n      // CATEGORY\r\n      handleCategory = (event) => {\r\n        this.state.flagType = event.target.value        \r\n        this.handleQuery()\r\n      }\r\n\r\n      //END CATEGORY\r\n\r\n\r\n\r\n      handleTags = (tags) => {\r\n        if(tags.length>this.state.tags.length){\r\n          this.state.tags = tags\r\n          this.filterByTags(tags)\r\n          this.handleQuery()\r\n        }else{\r\n          this.state.tags = tags\r\n          this.resetFilter()\r\n\r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n\r\n        //this.setState({oldData: this.state.data}) //save last data state\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].tags!==undefined){\r\n            while(j<this.state.data[i].tags.tag_me.length){\r\n              temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n              \r\n              while(k<tags.length){\r\n                if(temp.some(a => a.includes(tags[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n  \r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n\r\n          i++\r\n        }\r\n\r\n        this.state.data = tempData //set Data\r\n        \r\n        \r\n        \r\n      }\r\n\r\n\r\n      \r\n/// TEXT SECTION\r\n\r\nhandleText = (text) => {\r\n  if(text.length>this.state.text.length){\r\n\r\n    this.state.text=text \r\n    this.filterByText(text)\r\n    this.handleQuery()\r\n  }else{\r\n   this.state.text=text \r\n   this.resetFilter()\r\n  }\r\n}\r\n\r\nfilterByText = (text) => {\r\n\r\n  var i =0\r\n  var j =0\r\n  var k = 0\r\n  var z = 0\r\n  var temp\r\n  var tempData = []\r\n  var flag = false\r\n  \r\n  while(i<this.state.data.length){\r\n    j=0\r\n    if(this.state.data[i].spacy!==undefined){\r\n      while(j<this.state.data[i].spacy.processed_text.length){\r\n        temp=this.state.data[i].spacy.processed_text[j].split(\" \")\r\n        \r\n        while(k<text.length){\r\n          if(temp.some(a => a.includes(text[k].name))===true){\r\n            flag = true               \r\n          }else{\r\n            flag = false\r\n          }\r\n          k++\r\n        }\r\n  \r\n        if(flag===true){\r\n          tempData[z]= this.state.data[i]\r\n          z++\r\n        }\r\n        k=0\r\n        j++\r\n      }\r\n    }\r\n\r\n    i++\r\n  }\r\n\r\n \r\n  this.state.data=tempData\r\n  this.state.totalTweets=tempData.length\r\n\r\n  \r\n}\r\n\r\n/// HASHTAGS SECTION\r\n\r\nhandleHashtags = (hashtags) => {\r\n  if(hashtags.length>this.state.hashtags.length){\r\n    this.state.hashtags=hashtags\r\n    this.filterByHashtags(hashtags)\r\n    this.handleQuery()\r\n  }else{\r\n    this.state.hashtags=hashtags\r\n    this.resetFilter()\r\n  }\r\n}\r\n\r\nfilterByHashtags = (hashtags) => {\r\n  var i =0\r\n  var j =0\r\n  var k = 0\r\n  var z = 0\r\n  var temp\r\n  var tempData = []\r\n  var flag = false\r\n\r\n  while(i<this.state.data.length){\r\n    j=0\r\n    if(this.state.data[i].twitter_entities!==undefined){\r\n    if(this.state.data[i].twitter_entities.hashtags!==undefined){\r\n      while(j<this.state.data[i].twitter_entities.hashtags.length){\r\n        temp=this.state.data[i].twitter_entities.hashtags[j]\r\n       \r\n        while(k<hashtags.length){\r\n          if(temp===hashtags[k].name){\r\n            flag = true               \r\n          }else{\r\n            flag = false\r\n          }\r\n          k++\r\n        }\r\n\r\n        if(flag===true){\r\n          tempData[z]= this.state.data[i]\r\n          z++\r\n        }\r\n        k=0\r\n        j++\r\n      }\r\n    }\r\n  }\r\n\r\n    i++\r\n  }\r\n\r\n         \r\n  this.state.data=tempData\r\n  this.state.totalTweets=tempData.length\r\n  \r\n}\r\n\r\n  //QUERY SECTION  \r\nhandleQuery = () => {\r\n  if(this.state.data.length===0){\r\n    \r\n    var tempCounter = {\r\n      positive:0,\r\n      negative:0,\r\n      neutral:0\r\n    }\r\n    this.state.totalTweets=0\r\n    this.state.counter = tempCounter //reset counter\r\n    this.sendData()\r\n    \r\n  }else{\r\n    this.state.totalTweets=this.state.data.length\r\n    this.query()\r\n  }\r\n}\r\n\r\n      query = () => {\r\n       \r\n        var negative = 0\r\n        var positive = 0\r\n        var neutral = 0\r\n        var i=0\r\n        var tempCounter \r\n        \r\n        if (this.state.flagType===0 || this.state.flagType==='0') {               \r\n          while(i<this.state.data.length){\r\n            if(this.state.data[i].sentiment!==undefined){\r\n              if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n            \r\n            if (this.state.data[i].sentiment['sent-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['sent-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n              }\r\n            }\r\n            i++\r\n          }\r\n          i=0\r\n          while(i<this.state.data.length){\r\n            if(this.state.data[i].sentiment!==undefined){\r\n              if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n            if (this.state.data[i].sentiment['feel-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['feel-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n              }}\r\n            i++\r\n          }\r\n    \r\n          tempCounter = {\r\n            positive: positive,\r\n            negative: negative,\r\n            neutral: neutral,\r\n         }\r\n\r\n        }else if(this.state.flagType===1 || this.state.flagType==='1'){\r\n        \r\n          while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n\r\n            if (this.state.data[i].sentiment['sent-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['sent-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n            \r\n\r\n              }\r\n            }\r\n            i++\r\n          }\r\n          tempCounter = {\r\n            positive: positive,\r\n            negative: negative,\r\n            neutral: neutral,\r\n         }\r\n         \r\n        }else{\r\n          \r\n          while(i<this.state.data.length){\r\n            if(this.state.data[i].sentiment!==undefined){\r\n              if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n            if (this.state.data[i].sentiment['feel-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['feel-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n              }\r\n            }\r\n            i++\r\n          }\r\n          tempCounter = {\r\n            positive: positive,\r\n            negative: negative,\r\n            neutral: neutral,\r\n         }\r\n        }    \r\n        \r\n        this.state.counter = tempCounter\r\n\r\n         \r\n\r\n          \r\n\r\n        var dataGroupByDates=[{\r\n          id:null,\r\n          counterPositive:null,\r\n          counterNegative:null,\r\n          counterNeutral:null,\r\n        }]\r\n  \r\n        \r\n        var j = 0\r\n        \r\n        if(this.state.data.length!==0){\r\n          var i =this.state.data.length-1\r\n          var dt = this.state.data[i].created_at.substring(0, 10)\r\n          dataGroupByDates[0].id=dt\r\n          i--\r\n          while(i>-1){\r\n            if(this.state.data[i].sentiment!==undefined){\r\n              if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n            \r\n            if(dataGroupByDates[j].id===this.state.data[i].created_at.substring(0, 10)){\r\n              if( this.state.data[i].sentiment['feel-it'].sentiment==='positive'){\r\n                dataGroupByDates[j].counterPositive++\r\n              }else if( this.state.data[i].sentiment['feel-it'].sentiment==='negative'){\r\n                dataGroupByDates[j].counterNegative++\r\n              }else if( this.state.data[i].sentiment['feel-it'].sentiment==='neutral'){\r\n                dataGroupByDates[j].counterNeutral++\r\n              }\r\n  \r\n  \r\n            }else{\r\n              j++\r\n  \r\n              dataGroupByDates.push({\r\n                id:this.state.data[i].created_at.substring(0, 10),\r\n                counterPositive:0,\r\n                counterNegative:0,\r\n                counterNeutral:0,\r\n              })\r\n              if( this.state.data[i].sentiment['feel-it'].sentiment==='positive'){\r\n                dataGroupByDates[j].counterPositive++\r\n              }else if( this.state.data[i].sentiment['feel-it'].sentiment==='negative'){\r\n                dataGroupByDates[j].counterNegative++\r\n              }else if( this.state.data[i].sentiment['feel-it'].sentiment==='neutral'){\r\n                dataGroupByDates[j].counterNeutral++\r\n              }\r\n            }\r\n          }\r\n        }\r\n            i--\r\n          }\r\n          \r\n        }\r\n  \r\n        this.setState({dataGroupByDates : dataGroupByDates})\r\n        this.state.dataGroupByDates=dataGroupByDates     \r\n                    \r\n        this.sendData()\r\n      }\r\n\r\n\r\n      resetFilter = () => {\r\n\r\n        this.state.data= this.state.oldData\r\n\r\n        if(this.state.fromDate!==null || this.state.toDate!==null ){\r\n          this.filterDataByDates()\r\n        }\r\n        \r\n        if(this.state.tags.length!==0){\r\n          this.filterByTags(this.state.tags)\r\n        }\r\n\r\n        if(this.state.hashtags.length!==0){\r\n          this.filterByHashtags(this.state.hashtags)\r\n        }\r\n\r\n        if(this.state.text.length!==0){\r\n          this.filterByText(this.state.text)\r\n        }\r\n\r\n        this.handleQuery()\r\n\r\n      }\r\n\r\n    \r\n      sendData = () =>{\r\n        \r\n        this.props.parentCallback(this.state.dataGroupByDates,this.state.counter);\r\n      }\r\n      \r\n      \r\n\r\n    \r\n    render(){\r\n        return(            \r\n          <>\r\n            <div className=\"row stat-cards\">\r\n              <div className=\"col-md-4 col-xl-4\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Algorithm</h4><br />\r\n                          <select id=\"sel1\" onChange={this.handleCategory} >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Sent-it</option>\r\n                            <option value=\"2\">Feel-it</option>\r\n\r\n                          </select>\r\n\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-6 col-xl-6\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>From </h4><br />\r\n                          <input type=\"date\" \r\n                          name=\"startDate\"\r\n                          onBlur={this.handleFromDatesChanges}/>\r\n\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>To </h4><br />\r\n                          <input type=\"date\"\r\n                          id=\"toDate\"\r\n                          onBlur={this.handleToDatesChanges} />\r\n                        </center>\r\n                      </div>\r\n                    </div> \r\n                \r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-2 col-xl-2\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 col-xl-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Total Tweets</h4><br />\r\n                           <h1> {this.state.totalTweets} </h1>\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"row stat-cards\">\r\n            <div className=\"col-md-4 col-xl-4\">\r\n              <article className=\"stat-cards-item\">\r\n                <div className=\"row\">\r\n    \r\n                  <div className=\"col-md-12 col-xl-12\">\r\n                    <div className=\"stat-cards-info\">\r\n                      <center><h4>Tags</h4><br />\r\n                      <SearchFilters parentCallback = {this.handleTags.bind(this)} db = {this.props.db} allTags = {this.props.tweetsData.dataTags}/>\r\n                        \r\n                      </center>\r\n                    </div>\r\n                  </div>\r\n    \r\n    \r\n                </div>\r\n    \r\n              </article>\r\n            </div>\r\n    \r\n            <div className=\"col-md-4 col-xl-4\">\r\n              <article className=\"stat-cards-item\">\r\n                <div className=\"row\">\r\n    \r\n                  <div className=\"col-md-12 col-xl-12\">\r\n                    <div className=\"stat-cards-info\">\r\n                      <center><h4>Processed Text</h4><br />\r\n                      <SearchText parentCallback = {this.handleText.bind(this)} db = {this.props.db} allText = {this.props.tweetsData.dataText}/>\r\n                        \r\n                      </center>\r\n                    </div>\r\n                  </div>\r\n    \r\n    \r\n                </div>\r\n    \r\n              </article>\r\n            </div>\r\n    \r\n            <div className=\"col-md-4 col-xl-4\">\r\n              <article className=\"stat-cards-item\">\r\n                <div className=\"row\">\r\n    \r\n                  <div className=\"col-md-12 col-xl-12\">\r\n                    <div className=\"stat-cards-info\">\r\n                      <center><h4>Hashtags</h4><br />\r\n                      <SearchHashtag parentCallback = {this.handleHashtags.bind(this)} db = {this.props.db} allHashtags = {this.props.tweetsData.dataHashtags}/>\r\n                        \r\n                      </center>\r\n                    </div>\r\n                  </div>\r\n    \r\n    \r\n                </div>\r\n    \r\n              </article>\r\n            </div>\r\n    \r\n    \r\n          </div>\r\n          </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Filters","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\TimeLinesFilters.js",["243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274"],"import axios from 'axios';\r\nimport SearchFilters from './SearchFilters';\r\nimport SearchText from './SearchText';\r\nimport SearchHashtag from './SearchHashtag';\r\nimport React from 'react';\r\n\r\n\r\nclass Filters extends React.Component{\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.query=this.query.bind(this)\r\n\r\n        this.state = {\r\n          totalTweets: 0,\r\n          flagType: 0,\r\n          counter : [],\r\n          oldData : [],\r\n          data: [],\r\n          tags : [],\r\n          text : [],\r\n          hashtags : [],\r\n          fromDate: null,\r\n          toDate : null,\r\n\r\n      }\r\n     \r\n      this.getData(this.props.tweetsData.dataSortByDate.data)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.mongodb!==this.props.mongodb){\r\n        this.getData(this.props.tweetsData.dataSortByDate.data)\r\n      }\r\n      \r\n    }\r\n   \r\n    getData = (allData) => {\r\n\r\n            const data = allData\r\n            this.state.data = allData;\r\n            this.state.oldData = allData;\r\n            this.state.totalTweets = this.props.tweetsData.dataSortByDate.data.length;\r\n            this.query()\r\n              \r\n        }\r\n\r\n      //DATES FILTERS\r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n         \r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n    \r\n      filterDataByDates = () => {\r\n       \r\n\r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n          this.setState({oldData: this.state.data}) //save last data state\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n          this.state.data=tempData\r\n          this.state.totalTweets=tempData.length\r\n          }\r\n\r\n          this.handleQuery()\r\n        \r\n    \r\n    \r\n      }\r\n         //END DATES FILTERS\r\n\r\n      //TAGS SECTION\r\n      handleTags = (tags) => {\r\n        if(tags.length>this.state.tags.length){\r\n          this.state.tags = tags\r\n          this.filterByTags(tags)\r\n          this.handleQuery()\r\n        }else{\r\n          this.state.tags = tags\r\n          this.resetFilter()\r\n\r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].tags!==undefined){\r\n            while(j<this.state.data[i].tags.tag_me.length){\r\n              temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n              \r\n              while(k<tags.length){\r\n                if(temp.some(a => a.includes(tags[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n  \r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n/// TEXT SECTION\r\n\r\nhandleText = (text) => {\r\n  if(text.length>this.state.text.length){\r\n\r\n    this.state.text=text \r\n    this.filterByText(text)\r\n    this.handleQuery()\r\n  }else{\r\n   this.state.text=text \r\n   this.resetFilter()\r\n  }\r\n}\r\n\r\n      filterByText = (text) => {\r\n\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].spacy!==undefined){\r\n            while(j<this.state.data[i].spacy.processed_text.length){\r\n              temp=this.state.data[i].spacy.processed_text[j].split(\" \")\r\n              \r\n              while(k<text.length){\r\n                if(temp.some(a => a.includes(text[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n  \r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n  /// HASHTAGS SECTION\r\n\r\n  handleHashtags = (hashtags) => {\r\n    if(hashtags.length>this.state.hashtags.length){\r\n      this.state.hashtags=hashtags\r\n      this.filterByHashtags(hashtags)\r\n      this.handleQuery()\r\n    }else{\r\n      this.state.hashtags=hashtags\r\n      this.resetFilter()\r\n    }\r\n  }\r\n      filterByHashtags = (hashtags) => {\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n\r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].twitter_entities!==undefined){\r\n            while(j<this.state.data[i].twitter_entities.hashtags.length){\r\n              temp=this.state.data[i].twitter_entities.hashtags[j]\r\n             \r\n              while(k<hashtags.length){\r\n                if(temp===hashtags[k].name){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n  \r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n\r\n          i++\r\n        }\r\n\r\n               \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n      }\r\n\r\n            //RESET SECTIOn\r\n            resetFilter = () => {\r\n\r\n              this.state.data= this.state.oldData\r\n      \r\n              if(this.state.fromDate!==null || this.state.toDate!==null ){\r\n                this.filterDataByDates()\r\n              }\r\n              \r\n              if(this.state.tags.length!==0){\r\n                this.filterByTags(this.state.tags)\r\n              }\r\n      \r\n              if(this.state.hashtags.length!==0){\r\n                this.filterByHashtags(this.state.hashtags)\r\n              }\r\n      \r\n              if(this.state.text.length!==0){\r\n                this.filterByText(this.state.text)\r\n              }\r\n      \r\n              this.handleQuery()\r\n      \r\n            }\r\n   \r\n\r\n\r\n            handleQuery = () =>{\r\n              if(this.state.data.length===0){\r\n                \r\n                this.state.totalTweets=0\r\n                this.query()\r\n                \r\n              }else{\r\n                this.state.totalTweets=this.state.data.length\r\n                this.query()\r\n              }\r\n            }\r\n\r\n      query = () =>{\r\n        this.props.parentCallback(this.state.data);\r\n      }\r\n      \r\n      \r\n\r\n    \r\n    render(){\r\n        return(      \r\n          <>      \r\n        <div className=\"row stat-cards\">\r\n\r\n        <div className=\"col-md-6 col-xl-6\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>From </h4><br />\r\n                    <input type=\"date\" \r\n                    name=\"startDate\"\r\n                    onBlur={this.handleFromDatesChanges}/>\r\n\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>To </h4><br />\r\n                    <input type=\"date\"\r\n                    id=\"toDate\"\r\n                    onBlur={this.handleToDatesChanges} />\r\n                  </center>\r\n                </div>\r\n              </div> \r\n          \r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n        <div className=\"col-md-6 col-xl-6\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Total Tweets</h4><br />\r\n                     <h1> {this.state.totalTweets} </h1>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <div className=\"row stat-cards\">\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Tags</h4><br />\r\n                  <SearchFilters parentCallback = {this.handleTags.bind(this)} db = {this.props.db} allTags = {this.props.tweetsData.dataTags}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Processed Text</h4><br />\r\n                  <SearchText parentCallback = {this.handleText.bind(this)} db = {this.props.db}  allText = {this.props.tweetsData.dataText}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Hashtags</h4><br />\r\n                  <SearchHashtag parentCallback = {this.handleHashtags.bind(this)} db = {this.props.db} allHashtags = {this.props.tweetsData.dataHashtags}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      </>)\r\n    }\r\n}\r\n\r\nexport default Filters","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\BarChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\PieChart.js",["275"],"import React from \"react\";\r\nimport {Pie} from 'react-chartjs-2';\r\n\r\n\r\nconst PieChart = (props) =>{\r\n  var negative = props.negative\r\n  var positive = props.positive\r\n  var neutral = props.neutral\r\n  var data2 = [negative, neutral, positive]\r\n\r\n  \r\n  let total = data2.reduce((accumulator, currentValue) => accumulator + currentValue);\r\n    \r\n  var labels = data2.map(value => Math.round((value / total) * 100) + '%');\r\n\r\n  const  data = {\r\n    labels: [\r\n      'Negative = ' + labels[0],\r\n      'Neutral = '  + labels[1],\r\n      'Positive = ' + labels[2]\r\n    ],\r\n    datasets: [{\r\n      label: 'Sentiment',\r\n      data: [negative, neutral, positive],\r\n      \r\n      backgroundColor: [\r\n        'rgb(255, 99, 132)',\r\n        'rgb(54, 162, 235)',\r\n        'rgb(255, 205, 86)'\r\n      ],\r\n      hoverOffset: 4\r\n    }]\r\n  }\r\n  const option = {\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(tooltipItem, data) {\r\n          var dataset = data.datasets[tooltipItem.datasetIndex];\r\n          var meta = dataset._meta[Object.keys(dataset._meta)[0]];\r\n          var total = meta.total;\r\n          var currentValue = dataset.data[tooltipItem.index];\r\n          var percentage = parseFloat((currentValue/total*100).toFixed(1));\r\n          return currentValue + ' (' + percentage + '%)';\r\n        },\r\n        title: function(tooltipItem, data) {\r\n          return data.labels[tooltipItem[0].index];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n    return(\r\n        <div>\r\n            <Pie\r\n\t data = {data}\r\n\twidth={100}\r\n\theight={400}\r\n            />\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default PieChart","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\TimeLineChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\MultiTimeLineChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\TweetsTable.js",["276"],"import React, { useState } from \"react\";\r\n\r\n\r\nimport \"./table.css\";\r\nimport Table from \".\";\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport XLSX from 'xlsx'\r\n\r\nvar exportData=[];\r\nconst columns = [\r\n  { title: \"username\", field: \"author_username\", },\r\n  { title: \"text\", field: \"raw_text\", },\r\n  { title: \"tags\", field: \"tags\",  }]\r\n\r\nconst setData = (props) =>{\r\n \r\n  var i = 0\r\n  while (i<props.data.length) {\r\n    exportData.push({\r\n      author_username:props.data[i].author_username,\r\n      raw_text:props.data[i].raw_text,\r\n      tags:printTags(props.data[i])\r\n    })\r\n    i++\r\n  }  \r\n}\r\n\r\nconst downloadExcel = () => {\r\n  const newData = exportData.map(row => {\r\n    delete row.tableData\r\n    return row\r\n  })\r\n  const workSheet = XLSX.utils.json_to_sheet(newData)\r\n  const workBook = XLSX.utils.book_new()\r\n  XLSX.utils.book_append_sheet(workBook, workSheet, \"students\")\r\n  //Buffer\r\n  XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" })\r\n  //Binary string\r\n  XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" })\r\n  //Download\r\n  XLSX.writeFile(workBook, \"TweetData.xlsx\")\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  const printTags = (data) =>{\r\n    var i = 0\r\n    var temp \r\n     var tags = []\r\n    \r\n     if(data.tags!==undefined){\r\n\r\n     while(i<data.tags.tag_me.length){\r\n        temp = data.tags.tag_me[i].split(\" : \")\r\n        tags = tags+\",\"+temp[0]\r\n        i++\r\n    }\r\n    return tags\r\n\r\n     }else{\r\n       return(\r\n         \"\"\r\n       )\r\n     }\r\n  \r\n    \r\n  }\r\n\r\nconst downloadPdf = () => {\r\n  const doc = new jsPDF('landscape')\r\n\r\n  console.log(exportData)\r\n  doc.text(\"Tweet Details\", 20, 10)\r\n  doc.autoTable({\r\n    theme: \"grid\",\r\n    columns: columns.map(col => ({ ...col, dataKey: col.field })),\r\n    body: exportData\r\n  })\r\n  doc.save('table.pdf')\r\n}\r\n\r\nconst DisplayTable = (props) => {\r\n  setData(props)\r\n  return (\r\n    <main className=\"container_table\">\r\n      <button className='button activeButton' onClick={() => {downloadPdf()}} > Export Table</button>\r\n      <button className='button activeButton' onClick={() => {downloadExcel()}} > Export Excel</button>\r\n      <br/><br/><br/>\r\n      <div className=\"wrapper_table\">\r\n        <Table data={props.data} rowsPerPage={100} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default DisplayTable;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchFilters.js",["277","278"],"import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\nimport axios from 'axios';\r\n\r\n\r\n//https://www.npmjs.com/package/react-tag-autocomplete\r\nclass SearchFilters extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n      tags: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n  \r\n    this.getTags();\r\n         \r\n  }\r\n\r\n  getTags = () =>{\r\n\r\n    var i = 0;\r\n    var j = 0;\r\n    var k =0;\r\n    const data = this.props.allTags.data;\r\n    \r\n    var temp ;\r\n    var tempSuggestion = [];\r\n    var strings = [];\r\n\r\n\r\n    while(i<data.length){\r\n      j=0;\r\n      \r\n      if(data[i]._id!==undefined&&data[i]._id!==null){\r\n        \r\n        while(j<data[i]._id.tag_me.length){\r\n          \r\n          temp=data[i]._id.tag_me[j].split(\" : \")\r\n\r\n          if(strings.indexOf(temp[0])>-1){\r\n\r\n          }else{\r\n            tempSuggestion[k] = {\r\n              id:temp[1],\r\n              name: temp[0]\r\n            };\r\n            strings.push(temp[0])\r\n          }\r\n\r\n\r\n          k++;\r\n          j++;\r\n        }\r\n      }\r\n        i++;  \r\n    }\r\n    \r\n    \r\n    this.state.suggestions = tempSuggestion\r\n    this.setState({suggestions: tempSuggestion})\r\n\r\n    \r\n   \r\n     \r\n \r\n\r\n\r\nthis.reactTags = React.createRef()\r\n\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.mongodb!==this.props.mongodb){\r\n      this.getTags();\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  \r\n\r\n  sendData = (tags) =>{\r\n    this.props.parentCallback(tags);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const tags = this.state.tags.slice(0)\r\n    tags.splice(i, 1)\r\n    this.setState({ tags })\r\n    this.sendData(tags)\r\n  }\r\n\r\n  onAddition (tag) {\r\n    const tags = [].concat(this.state.tags, tag)\r\n    this.setState({ tags })\r\n    this.sendData(tags)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        ref={this.reactTags}\r\n        tags={this.state.tags}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchFilters","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchHashtag.js",["279","280","281","282"],"import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\nimport axios from 'axios';\r\n\r\n\r\n//https://www.npmjs.com/package/react-tag-autocomplete\r\nclass SearchHashtag extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n      hashtags: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n     \r\n    this.getHashtags();\r\n  }\r\n\r\n  getHashtags = () => {\r\n    var i = 0;\r\n    var j = 0;\r\n    var k =0;\r\n    const data = this.props.allHashtags.data;\r\n    var strings = [];\r\n   \r\n    var tempSuggestion = []\r\n    //console.log(\"hashtags\"+data[0])\r\n    while(i<data.length){\r\n      \r\n      j=0\r\n      if(data[i]._id.hashtags!==undefined){\r\n        while(j<data[i]._id.hashtags.length){ \r\n          if(strings.indexOf(data[i]._id.hashtags[j])==-1){\r\n            tempSuggestion.push(\r\n              {\r\n                id:0,\r\n                name: data[i]._id.hashtags[j]\r\n              }\r\n            )\r\n            strings.push(data[i]._id.hashtags[j]);\r\n          }    \r\n\r\n          //console.log(tempSuggestion)\r\n          j++\r\n        }\r\n      }\r\n\r\n\r\n        i++\r\n    }\r\n\r\n    this.state.suggestions = tempSuggestion\r\n    this.setState({suggestions: tempSuggestion})\r\n   \r\n\r\nthis.reactTags = React.createRef()\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.mongodb!==this.props.mongodb){\r\n      this.getHashtags();\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  sendData = (hashtags) =>{\r\n    this.props.parentCallback(hashtags);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const hashtags = this.state.hashtags.slice(0)\r\n    hashtags.splice(i, 1)\r\n    this.setState({ hashtags })\r\n    this.sendData(hashtags)\r\n  }\r\n\r\n  onAddition (hashtag) {\r\n    const hashtags = [].concat(this.state.hashtags, hashtag)\r\n    this.setState({ hashtags })\r\n    this.sendData(hashtags)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        placeholderText=\"Add new Hashtag\"\r\n        ref={this.reactTags}\r\n        tags={this.state.hashtags}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchHashtag","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchText.js",["283","284","285"],"import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\nimport axios from 'axios';\r\n\r\n\r\n//https://www.npmjs.com/package/react-tag-autocomplete\r\nclass SearchText extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n      text: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n  \r\n    this.getText();\r\n\r\n  }\r\n\r\n  getText = () => {\r\n    var i = 1;\r\n    var j = 0;\r\n    var temp;\r\n    var strings = [];\r\n    const data = this.props.allText.data;\r\n    //var temp =data[0]._id.processed_text[0].split(\" \")\r\n    \r\n    var tempSuggestion = []\r\n \r\n    while(i<data.length){\r\n      j=0;\r\n      \r\n      if(data[i]._id!==undefined&&data[i]._id!==null){\r\n       \r\n      while(j<data[i]._id.processed_text.length){\r\n        \r\n        temp=data[i]._id.processed_text[j].split(\" \")\r\n\r\n        if(strings.indexOf(temp[0])==-1){\r\n          tempSuggestion.push({\r\n            id:0,\r\n            name: temp[0]      \r\n          });\r\n          strings.push(temp[0]);\r\n        }\r\n\r\n\r\n        j++;\r\n      }\r\n    }\r\n\r\n        i++;\r\n    }\r\n    \r\n   \r\n    this.state.suggestions = tempSuggestion\r\n    this.setState({suggestions: tempSuggestion})        \r\n           \r\n\r\nthis.reactTags = React.createRef()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.mongodb!==this.props.mongodb){\r\n      this.getText();\r\n    }\r\n    \r\n  }\r\n\r\n  sendData = (text) =>{\r\n    this.props.parentCallback(text);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const text = this.state.text.slice(0)\r\n    text.splice(i, 1)\r\n    this.setState({ text })\r\n    this.sendData(text)\r\n  }\r\n\r\n  onAddition (tag) {\r\n    const text = [].concat(this.state.text, tag)\r\n    this.setState({ text })\r\n    this.sendData(text)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        placeholderText=\"Add new Text\"\r\n        ref={this.reactTags}\r\n        tags={this.state.text}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchText","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\index.jsx",["286"],"import React, { useState } from \"react\";\r\n\r\nimport useTable from \"../../hooks/useTable.js\";\r\nimport \"./table.css\";\r\nimport TableFooter from \"./TableFooter\";\r\n\r\n\r\nconst printTags = (data) =>{\r\n  var i = 0\r\n  var temp \r\n   const tags = []\r\n  \r\n   if(data.tags!==undefined){\r\n    while(i<data.tags.tag_me.length){\r\n      temp = data.tags.tag_me[i].split(\" : \")\r\n      tags[i] = {\r\n        name : temp[0],\r\n        link : temp[3]\r\n      }\r\n      i++\r\n  }\r\n\r\n  return(\r\n    tags.map(item=>(<a href={item.link} target=\"_blank\" className=\"tag\">{item.name}</a>))\r\n   \r\n    )\r\n   }else{\r\n     return(\r\n       \"\"\r\n     )\r\n   }\r\n\r\n  \r\n}\r\n\r\nconst Table = ({ data, rowsPerPage }) => {\r\n  const [page, setPage] = useState(1);\r\n  const { slice, range } = useTable(data, page, rowsPerPage);\r\n  \r\n  return (\r\n    <>\r\n      <table className=\"table\" id=\"tabella\">\r\n        <thead className=\"tableRowHeader\">\r\n          <tr>\r\n            <th className=\"tableHeader\">Username</th>\r\n            <th className=\"tableHeader\">Text</th>\r\n            <th className=\"tableHeader\">Tags</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {slice.map((data) => (\r\n            <tr className=\"tableRowItems\" >\r\n              <td className=\"tableCell\">{data.author_username}</td>\r\n              <td className=\"tableCell\">{data.raw_text}</td>\r\n              <td className=\"tableCell\">{printTags(data)} </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <TableFooter range={range} slice={slice} setPage={setPage} page={page} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\hooks\\useTable.js",["287","288"],"import { useState, useEffect } from \"react\";\r\n\r\nconst calculateRange = (data, rowsPerPage) => {\r\n  const range = [];\r\n  const num = Math.ceil(data.length / rowsPerPage);\r\n  let i = 1;\r\n  for (let i = 1; i <= num; i++) {\r\n    range.push(i);\r\n  }\r\n  return range;\r\n};\r\n\r\nconst sliceData = (data, page, rowsPerPage) => {\r\n  return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\r\n};\r\n\r\nconst useTable = (data, page, rowsPerPage) => {\r\n  const [tableRange, setTableRange] = useState([]);\r\n  const [slice, setSlice] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const range = calculateRange(data, rowsPerPage);\r\n    setTableRange([...range]);\r\n\r\n    const slice = sliceData(data, page, rowsPerPage);\r\n    setSlice([...slice]);\r\n  }, [data, setTableRange, page, setSlice]);\r\n\r\n  return { slice, range: tableRange };\r\n};\r\n\r\nexport default useTable;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\TableFooter\\index.jsx",[],{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":66,"column":5,"nodeType":"295","messageId":"296","endLine":66,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":129,"column":7,"nodeType":"295","messageId":"296","endLine":129,"endColumn":17},{"ruleId":"297","severity":1,"message":"298","line":150,"column":5,"nodeType":"299","messageId":"300","endLine":200,"endColumn":6},{"ruleId":"301","severity":1,"message":"302","line":190,"column":7,"nodeType":"303","messageId":"304","endLine":199,"endColumn":8},{"ruleId":"297","severity":1,"message":"298","line":212,"column":7,"nodeType":"299","messageId":"300","endLine":227,"endColumn":8},{"ruleId":"305","severity":1,"message":"306","line":3,"column":195,"nodeType":"307","messageId":"308","endLine":3,"endColumn":197},{"ruleId":"305","severity":1,"message":"306","line":3,"column":218,"nodeType":"307","messageId":"308","endLine":3,"endColumn":220},{"ruleId":"309","severity":1,"message":"310","line":111,"column":56,"nodeType":"311","messageId":"312","endLine":111,"endColumn":58},{"ruleId":"309","severity":1,"message":"310","line":237,"column":40,"nodeType":"311","messageId":"312","endLine":237,"endColumn":42},{"ruleId":"293","severity":1,"message":"294","line":36,"column":7,"nodeType":"295","messageId":"296","endLine":36,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":39,"column":7,"nodeType":"295","messageId":"296","endLine":39,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":34,"column":5,"nodeType":"295","messageId":"296","endLine":34,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":72,"column":9,"nodeType":"295","messageId":"296","endLine":72,"endColumn":19},{"ruleId":"313","severity":1,"message":"314","line":25,"column":17,"nodeType":"315","endLine":25,"endColumn":75},{"ruleId":"293","severity":1,"message":"294","line":28,"column":7,"nodeType":"295","messageId":"296","endLine":28,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":29,"column":7,"nodeType":"295","messageId":"296","endLine":29,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":29,"column":5,"nodeType":"295","messageId":"296","endLine":29,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":96,"column":9,"nodeType":"295","messageId":"296","endLine":96,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":33,"column":7,"nodeType":"295","messageId":"296","endLine":33,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":34,"column":7,"nodeType":"295","messageId":"296","endLine":34,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":72,"column":9,"nodeType":"295","messageId":"296","endLine":72,"endColumn":19},{"ruleId":"313","severity":1,"message":"314","line":27,"column":17,"nodeType":"315","endLine":27,"endColumn":80},{"ruleId":"316","severity":1,"message":"317","line":24,"column":25,"nodeType":"315","endLine":24,"endColumn":43},{"ruleId":"316","severity":1,"message":"317","line":33,"column":21,"nodeType":"315","endLine":33,"endColumn":41},{"ruleId":"316","severity":1,"message":"317","line":43,"column":21,"nodeType":"315","endLine":43,"endColumn":42},{"ruleId":"293","severity":1,"message":"294","line":64,"column":9,"nodeType":"295","messageId":"296","endLine":64,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":65,"column":9,"nodeType":"295","messageId":"296","endLine":65,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":66,"column":9,"nodeType":"295","messageId":"296","endLine":66,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":67,"column":9,"nodeType":"295","messageId":"296","endLine":67,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":68,"column":9,"nodeType":"295","messageId":"296","endLine":68,"endColumn":19},{"ruleId":"318","severity":1,"message":"319","line":5,"column":10,"nodeType":"320","messageId":"321","endLine":5,"endColumn":14},{"ruleId":"318","severity":1,"message":"322","line":5,"column":16,"nodeType":"320","messageId":"321","endLine":5,"endColumn":23},{"ruleId":"318","severity":1,"message":"323","line":7,"column":21,"nodeType":"320","messageId":"321","endLine":7,"endColumn":33},{"ruleId":"318","severity":1,"message":"324","line":1,"column":8,"nodeType":"320","messageId":"321","endLine":1,"endColumn":13},{"ruleId":"318","severity":1,"message":"325","line":5,"column":17,"nodeType":"320","messageId":"321","endLine":5,"endColumn":26},{"ruleId":"293","severity":1,"message":"294","line":47,"column":11,"nodeType":"295","messageId":"296","endLine":47,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":48,"column":11,"nodeType":"295","messageId":"296","endLine":48,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":60,"column":11,"nodeType":"295","messageId":"296","endLine":60,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":62,"column":13,"nodeType":"295","messageId":"296","endLine":62,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":76,"column":11,"nodeType":"295","messageId":"296","endLine":76,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":78,"column":13,"nodeType":"295","messageId":"296","endLine":78,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":115,"column":9,"nodeType":"295","messageId":"296","endLine":115,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":136,"column":9,"nodeType":"295","messageId":"296","endLine":136,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":159,"column":10,"nodeType":"295","messageId":"296","endLine":159,"endColumn":20},{"ruleId":"293","severity":1,"message":"294","line":174,"column":11,"nodeType":"295","messageId":"296","endLine":174,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":178,"column":11,"nodeType":"295","messageId":"296","endLine":178,"endColumn":21},{"ruleId":"326","severity":1,"message":"327","line":201,"column":30,"nodeType":"328","messageId":"329","endLine":201,"endColumn":59},{"ruleId":"293","severity":1,"message":"294","line":221,"column":9,"nodeType":"295","messageId":"296","endLine":221,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":222,"column":9,"nodeType":"295","messageId":"296","endLine":222,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":232,"column":5,"nodeType":"295","messageId":"296","endLine":232,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":236,"column":4,"nodeType":"295","messageId":"296","endLine":236,"endColumn":14},{"ruleId":"326","severity":1,"message":"327","line":258,"column":30,"nodeType":"328","messageId":"329","endLine":258,"endColumn":59},{"ruleId":"293","severity":1,"message":"294","line":278,"column":9,"nodeType":"295","messageId":"296","endLine":278,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":279,"column":9,"nodeType":"295","messageId":"296","endLine":279,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":288,"column":7,"nodeType":"295","messageId":"296","endLine":288,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":292,"column":7,"nodeType":"295","messageId":"296","endLine":292,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":334,"column":9,"nodeType":"295","messageId":"296","endLine":334,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":335,"column":9,"nodeType":"295","messageId":"296","endLine":335,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":344,"column":9,"nodeType":"295","messageId":"296","endLine":344,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":370,"column":11,"nodeType":"295","messageId":"296","endLine":370,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":371,"column":11,"nodeType":"295","messageId":"296","endLine":371,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":376,"column":11,"nodeType":"295","messageId":"296","endLine":376,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":377,"column":11,"nodeType":"295","messageId":"296","endLine":377,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":381,"column":11,"nodeType":"295","messageId":"296","endLine":381,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":390,"column":11,"nodeType":"295","messageId":"296","endLine":390,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":391,"column":11,"nodeType":"295","messageId":"296","endLine":391,"endColumn":21},{"ruleId":"309","severity":1,"message":"310","line":394,"column":37,"nodeType":"311","messageId":"312","endLine":394,"endColumn":39},{"ruleId":"309","severity":1,"message":"310","line":394,"column":62,"nodeType":"311","messageId":"312","endLine":394,"endColumn":64},{"ruleId":"293","severity":1,"message":"294","line":396,"column":11,"nodeType":"295","messageId":"296","endLine":396,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":397,"column":11,"nodeType":"295","messageId":"296","endLine":397,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":401,"column":11,"nodeType":"295","messageId":"296","endLine":401,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":637,"column":7,"nodeType":"295","messageId":"296","endLine":637,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":651,"column":11,"nodeType":"295","messageId":"296","endLine":651,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":656,"column":11,"nodeType":"295","messageId":"296","endLine":656,"endColumn":21},{"ruleId":"318","severity":1,"message":"324","line":1,"column":8,"nodeType":"320","messageId":"321","endLine":1,"endColumn":13},{"ruleId":"293","severity":1,"message":"294","line":45,"column":11,"nodeType":"295","messageId":"296","endLine":45,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":86,"column":11,"nodeType":"295","messageId":"296","endLine":86,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":88,"column":11,"nodeType":"295","messageId":"296","endLine":88,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":90,"column":11,"nodeType":"295","messageId":"296","endLine":90,"endColumn":21},{"ruleId":"330","severity":1,"message":"331","line":105,"column":17,"nodeType":"320","messageId":"332","endLine":105,"endColumn":18},{"ruleId":"293","severity":1,"message":"294","line":148,"column":11,"nodeType":"295","messageId":"296","endLine":148,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":158,"column":11,"nodeType":"295","messageId":"296","endLine":158,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":160,"column":13,"nodeType":"295","messageId":"296","endLine":160,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":174,"column":11,"nodeType":"295","messageId":"296","endLine":174,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":176,"column":13,"nodeType":"295","messageId":"296","endLine":176,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":213,"column":9,"nodeType":"295","messageId":"296","endLine":213,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":234,"column":9,"nodeType":"295","messageId":"296","endLine":234,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":257,"column":10,"nodeType":"295","messageId":"296","endLine":257,"endColumn":20},{"ruleId":"293","severity":1,"message":"294","line":270,"column":9,"nodeType":"295","messageId":"296","endLine":270,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":280,"column":11,"nodeType":"295","messageId":"296","endLine":280,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":284,"column":11,"nodeType":"295","messageId":"296","endLine":284,"endColumn":21},{"ruleId":"326","severity":1,"message":"327","line":309,"column":30,"nodeType":"328","messageId":"329","endLine":309,"endColumn":59},{"ruleId":"293","severity":1,"message":"294","line":329,"column":9,"nodeType":"295","messageId":"296","endLine":329,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":342,"column":5,"nodeType":"295","messageId":"296","endLine":342,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":346,"column":4,"nodeType":"295","messageId":"296","endLine":346,"endColumn":14},{"ruleId":"326","severity":1,"message":"327","line":368,"column":24,"nodeType":"328","messageId":"329","endLine":368,"endColumn":53},{"ruleId":"293","severity":1,"message":"294","line":389,"column":3,"nodeType":"295","messageId":"296","endLine":389,"endColumn":13},{"ruleId":"293","severity":1,"message":"294","line":390,"column":3,"nodeType":"295","messageId":"296","endLine":390,"endColumn":13},{"ruleId":"293","severity":1,"message":"294","line":399,"column":5,"nodeType":"295","messageId":"296","endLine":399,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":403,"column":5,"nodeType":"295","messageId":"296","endLine":403,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":447,"column":3,"nodeType":"295","messageId":"296","endLine":447,"endColumn":13},{"ruleId":"293","severity":1,"message":"294","line":448,"column":3,"nodeType":"295","messageId":"296","endLine":448,"endColumn":13},{"ruleId":"293","severity":1,"message":"294","line":461,"column":5,"nodeType":"295","messageId":"296","endLine":461,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":462,"column":5,"nodeType":"295","messageId":"296","endLine":462,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":466,"column":5,"nodeType":"295","messageId":"296","endLine":466,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":560,"column":9,"nodeType":"295","messageId":"296","endLine":560,"endColumn":19},{"ruleId":"330","severity":1,"message":"331","line":577,"column":15,"nodeType":"320","messageId":"332","endLine":577,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":620,"column":9,"nodeType":"295","messageId":"296","endLine":620,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":628,"column":9,"nodeType":"295","messageId":"296","endLine":628,"endColumn":19},{"ruleId":"318","severity":1,"message":"324","line":1,"column":8,"nodeType":"320","messageId":"321","endLine":1,"endColumn":13},{"ruleId":"318","severity":1,"message":"319","line":40,"column":19,"nodeType":"320","messageId":"321","endLine":40,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":41,"column":13,"nodeType":"295","messageId":"296","endLine":41,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":42,"column":13,"nodeType":"295","messageId":"296","endLine":42,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":43,"column":13,"nodeType":"295","messageId":"296","endLine":43,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":52,"column":11,"nodeType":"295","messageId":"296","endLine":52,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":54,"column":13,"nodeType":"295","messageId":"296","endLine":54,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":68,"column":11,"nodeType":"295","messageId":"296","endLine":68,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":70,"column":13,"nodeType":"295","messageId":"296","endLine":70,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":111,"column":9,"nodeType":"295","messageId":"296","endLine":111,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":112,"column":9,"nodeType":"295","messageId":"296","endLine":112,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":133,"column":9,"nodeType":"295","messageId":"296","endLine":133,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":134,"column":9,"nodeType":"295","messageId":"296","endLine":134,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":157,"column":11,"nodeType":"295","messageId":"296","endLine":157,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":158,"column":11,"nodeType":"295","messageId":"296","endLine":158,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":171,"column":11,"nodeType":"295","messageId":"296","endLine":171,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":175,"column":11,"nodeType":"295","messageId":"296","endLine":175,"endColumn":21},{"ruleId":"326","severity":1,"message":"327","line":198,"column":30,"nodeType":"328","messageId":"329","endLine":198,"endColumn":59},{"ruleId":"293","severity":1,"message":"294","line":218,"column":9,"nodeType":"295","messageId":"296","endLine":218,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":219,"column":9,"nodeType":"295","messageId":"296","endLine":219,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":229,"column":5,"nodeType":"295","messageId":"296","endLine":229,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":233,"column":4,"nodeType":"295","messageId":"296","endLine":233,"endColumn":14},{"ruleId":"326","severity":1,"message":"327","line":255,"column":30,"nodeType":"328","messageId":"329","endLine":255,"endColumn":59},{"ruleId":"293","severity":1,"message":"294","line":276,"column":9,"nodeType":"295","messageId":"296","endLine":276,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":277,"column":9,"nodeType":"295","messageId":"296","endLine":277,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":286,"column":7,"nodeType":"295","messageId":"296","endLine":286,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":290,"column":7,"nodeType":"295","messageId":"296","endLine":290,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":331,"column":9,"nodeType":"295","messageId":"296","endLine":331,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":332,"column":9,"nodeType":"295","messageId":"296","endLine":332,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":339,"column":15,"nodeType":"295","messageId":"296","endLine":339,"endColumn":25},{"ruleId":"293","severity":1,"message":"294","line":366,"column":17,"nodeType":"295","messageId":"296","endLine":366,"endColumn":27},{"ruleId":"293","severity":1,"message":"294","line":370,"column":17,"nodeType":"295","messageId":"296","endLine":370,"endColumn":27},{"ruleId":"318","severity":1,"message":"333","line":34,"column":9,"nodeType":"320","messageId":"321","endLine":34,"endColumn":15},{"ruleId":"318","severity":1,"message":"334","line":1,"column":17,"nodeType":"320","messageId":"321","endLine":1,"endColumn":25},{"ruleId":"318","severity":1,"message":"324","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":13},{"ruleId":"293","severity":1,"message":"294","line":64,"column":5,"nodeType":"295","messageId":"296","endLine":64,"endColumn":15},{"ruleId":"318","severity":1,"message":"324","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":13},{"ruleId":"318","severity":1,"message":"335","line":26,"column":9,"nodeType":"320","messageId":"321","endLine":26,"endColumn":10},{"ruleId":"309","severity":1,"message":"310","line":37,"column":54,"nodeType":"311","messageId":"312","endLine":37,"endColumn":56},{"ruleId":"293","severity":1,"message":"294","line":56,"column":5,"nodeType":"295","messageId":"296","endLine":56,"endColumn":15},{"ruleId":"318","severity":1,"message":"324","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":13},{"ruleId":"309","severity":1,"message":"310","line":43,"column":36,"nodeType":"311","messageId":"312","endLine":43,"endColumn":38},{"ruleId":"293","severity":1,"message":"294","line":60,"column":5,"nodeType":"295","messageId":"296","endLine":60,"endColumn":15},{"ruleId":"336","severity":1,"message":"337","line":24,"column":21,"nodeType":"315","messageId":"338","endLine":24,"endColumn":73,"fix":"339"},{"ruleId":"318","severity":1,"message":"340","line":6,"column":7,"nodeType":"320","messageId":"321","endLine":6,"endColumn":8},{"ruleId":"341","severity":1,"message":"342","line":27,"column":6,"nodeType":"343","endLine":27,"endColumn":43,"suggestions":"344"},"no-native-reassign",["345"],"no-negated-in-lhs",["346"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","'setcompleted' is assigned a value but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'k'.","ArrowFunctionExpression","unsafeRefs","no-redeclare","'i' is already defined.","redeclared","'option' is assigned a value but never used.","'useState' is defined but never used.","'k' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"347","text":"348"},"'i' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rowsPerPage'. Either include it or remove the dependency array.","ArrayExpression",["349"],"no-global-assign","no-unsafe-negation",[536,536]," rel=\"noreferrer\"",{"desc":"350","fix":"351"},"Update the dependencies array to be: [data, setTableRange, page, setSlice, rowsPerPage]",{"range":"352","text":"353"},[736,773],"[data, setTableRange, page, setSlice, rowsPerPage]"]