[{"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\index.js":"1","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\App.js":"2","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\script.js":"3","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\SentimentCharts.js":"4","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\TweetList.js":"5","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\WordCloud.js":"6","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\TimeLines.js":"7","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Home.js":"8","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Maps.js":"9","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Collection.js":"10","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Dbs.js":"11","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\preloader.js":"12","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\PieChart.js":"13","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\Filters.js":"14","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\BarChart.js":"15","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\MultiTimeLineChart.js":"16","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\TimeLineChart.js":"17","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SentimentFilters.js":"18","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\TimeLinesFilters.js":"19","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\TweetsTable.js":"20","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchHashtag.js":"21","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchFilters.js":"22","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchText.js":"23","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\index.jsx":"24","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\hooks\\useTable.js":"25","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\TableFooter\\index.jsx":"26"},{"size":211,"mtime":1643644658000,"results":"27","hashOfConfig":"28"},{"size":11853,"mtime":1644623858542,"results":"29","hashOfConfig":"28"},{"size":10081,"mtime":1643644658000,"results":"30","hashOfConfig":"28"},{"size":3040,"mtime":1644623966230,"results":"31","hashOfConfig":"28"},{"size":2042,"mtime":1644623982033,"results":"32","hashOfConfig":"28"},{"size":4542,"mtime":1644624000031,"results":"33","hashOfConfig":"28"},{"size":3117,"mtime":1644623974462,"results":"34","hashOfConfig":"28"},{"size":2083,"mtime":1644624149309,"results":"35","hashOfConfig":"28"},{"size":3686,"mtime":1644624133567,"results":"36","hashOfConfig":"28"},{"size":753,"mtime":1643721506929,"results":"37","hashOfConfig":"28"},{"size":715,"mtime":1644608504368,"results":"38","hashOfConfig":"28"},{"size":784,"mtime":1643644656000,"results":"39","hashOfConfig":"28"},{"size":1602,"mtime":1643644656000,"results":"40","hashOfConfig":"28"},{"size":23800,"mtime":1644539750779,"results":"41","hashOfConfig":"28"},{"size":967,"mtime":1643644656000,"results":"42","hashOfConfig":"28"},{"size":1332,"mtime":1643644656000,"results":"43","hashOfConfig":"28"},{"size":758,"mtime":1643644656000,"results":"44","hashOfConfig":"28"},{"size":22956,"mtime":1643645322000,"results":"45","hashOfConfig":"28"},{"size":13598,"mtime":1643645330000,"results":"46","hashOfConfig":"28"},{"size":2279,"mtime":1643644656000,"results":"47","hashOfConfig":"28"},{"size":3958,"mtime":1644432751999,"results":"48","hashOfConfig":"28"},{"size":3878,"mtime":1644432751999,"results":"49","hashOfConfig":"28"},{"size":3747,"mtime":1644432752000,"results":"50","hashOfConfig":"28"},{"size":1567,"mtime":1643724309880,"results":"51","hashOfConfig":"28"},{"size":849,"mtime":1643644656000,"results":"52","hashOfConfig":"28"},{"size":1074,"mtime":1643644656000,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"tjoxod",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\index.js",[],["120","121"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\App.js",["122","123","124","125","126"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\script.js",["127","128","129","130"],"\r\n\r\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n  (function () {\r\n    var sidebar = document.querySelector('.sidebar'),\r\n        catSubMenu = document.querySelector('.cat-sub-menu'),\r\n        sidebarBtns = document.querySelectorAll('.sidebar-toggle');\r\n\r\n    var _iterator = _createForOfIteratorHelper(sidebarBtns),\r\n        _step;\r\n\r\n    try {\r\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\r\n        var sidebarBtn = _step.value;\r\n\r\n        if (sidebarBtn && catSubMenu && sidebarBtn) {\r\n          sidebarBtn.addEventListener('click', function () {\r\n            var _iterator2 = _createForOfIteratorHelper(sidebarBtns),\r\n                _step2;\r\n\r\n            try {\r\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\r\n                var sdbrBtn = _step2.value;\r\n                sdbrBtn.classList.toggle('rotated');\r\n              }\r\n            } catch (err) {\r\n              _iterator2.e(err);\r\n            } finally {\r\n              _iterator2.f();\r\n            }\r\n\r\n            sidebar.classList.toggle('hidden');\r\n            catSubMenu.classList.remove('visible');\r\n          });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      _iterator.e(err);\r\n    } finally {\r\n      _iterator.f();\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var showCatBtns = document.querySelectorAll('.show-cat-btn');\r\n\r\n    if (showCatBtns) {\r\n      showCatBtns.forEach(function (showCatBtn) {\r\n        var catSubMenu = showCatBtn.nextElementSibling;\r\n        showCatBtn.addEventListener('click', function (e) {\r\n          e.preventDefault();\r\n          catSubMenu.classList.toggle('visible');\r\n          var catBtnToRotate = document.querySelector('.category__btn');\r\n          catBtnToRotate.classList.toggle('rotated');\r\n        });\r\n      });\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var showMenu = document.querySelector('.lang-switcher');\r\n    var langMenu = document.querySelector('.lang-menu');\r\n    var layer = document.querySelector('.layer');\r\n\r\n    if (showMenu) {\r\n      showMenu.addEventListener('click', function () {\r\n        langMenu.classList.add('active');\r\n        layer.classList.add('active');\r\n      });\r\n\r\n      if (layer) {\r\n        layer.addEventListener('click', function (e) {\r\n          if (langMenu.classList.contains('active')) {\r\n            langMenu.classList.remove('active');\r\n            layer.classList.remove('active');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var userDdBtnList = document.querySelectorAll('.dropdown-btn');\r\n    var userDdList = document.querySelectorAll('.users-item-dropdown');\r\n    var layer = document.querySelector('.layer');\r\n\r\n    if (userDdList && userDdBtnList) {\r\n      var _iterator3 = _createForOfIteratorHelper(userDdBtnList),\r\n          _step3;\r\n\r\n      try {\r\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\r\n          var userDdBtn = _step3.value;\r\n          userDdBtn.addEventListener('click', function (e) {\r\n            layer.classList.add('active');\r\n\r\n            var _iterator4 = _createForOfIteratorHelper(userDdList),\r\n                _step4;\r\n\r\n            try {\r\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\r\n                var userDd = _step4.value;\r\n\r\n                if (e.currentTarget.nextElementSibling == userDd) {\r\n                  if (userDd.classList.contains('active')) {\r\n                    userDd.classList.remove('active');\r\n                  } else {\r\n                    userDd.classList.add('active');\r\n                  }\r\n                } else {\r\n                  userDd.classList.remove('active');\r\n                }\r\n              }\r\n            } catch (err) {\r\n              _iterator4.e(err);\r\n            } finally {\r\n              _iterator4.f();\r\n            }\r\n          });\r\n        }\r\n      } catch (err) {\r\n        _iterator3.e(err);\r\n      } finally {\r\n        _iterator3.f();\r\n      }\r\n    }\r\n\r\n    if (layer) {\r\n      layer.addEventListener('click', function (e) {\r\n        var _iterator5 = _createForOfIteratorHelper(userDdList),\r\n            _step5;\r\n\r\n        try {\r\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\r\n            var userDd = _step5.value;\r\n\r\n            if (userDd.classList.contains('active')) {\r\n              userDd.classList.remove('active');\r\n              layer.classList.remove('active');\r\n            }\r\n          }\r\n        } catch (err) {\r\n          _iterator5.e(err);\r\n        } finally {\r\n          _iterator5.f();\r\n        }\r\n      });\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    //Chart.defaults.backgroundColor = '#000';\r\n    var darkMode = localStorage.getItem('darkMode');\r\n    var darkModeToggle = document.querySelector('.theme-switcher');\r\n\r\n    var enableDarkMode = function enableDarkMode() {\r\n      document.body.classList.add('darkmode');\r\n      localStorage.setItem('darkMode', 'enabled');\r\n    };\r\n\r\n    var disableDarkMode = function disableDarkMode() {\r\n      document.body.classList.remove('darkmode');\r\n      localStorage.setItem('darkMode', null);\r\n    };\r\n\r\n    if (darkMode === 'enabled') {\r\n      enableDarkMode();\r\n    }\r\n\r\n    if (darkModeToggle) {\r\n      darkModeToggle.addEventListener('click', function () {\r\n        darkMode = localStorage.getItem('darkMode');\r\n\r\n        if (darkMode !== 'enabled') {\r\n          enableDarkMode();\r\n        } else {\r\n          disableDarkMode();\r\n        }\r\n\r\n      \r\n      });\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var checkAll = document.querySelector('.check-all');\r\n    var checkers = document.querySelectorAll('.check');\r\n\r\n    if (checkAll && checkers) {\r\n      checkAll.addEventListener('change', function (e) {\r\n        var _iterator6 = _createForOfIteratorHelper(checkers),\r\n            _step6;\r\n\r\n        try {\r\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\r\n            var checker = _step6.value;\r\n\r\n            if (checkAll.checked) {\r\n              checker.checked = true;\r\n              checker.parentElement.parentElement.parentElement.classList.add('active');\r\n            } else {\r\n              checker.checked = false;\r\n              checker.parentElement.parentElement.parentElement.classList.remove('active');\r\n            }\r\n          }\r\n        } catch (err) {\r\n          _iterator6.e(err);\r\n        } finally {\r\n          _iterator6.f();\r\n        }\r\n      });\r\n\r\n      var _iterator7 = _createForOfIteratorHelper(checkers),\r\n          _step7;\r\n\r\n      try {\r\n        var _loop = function _loop() {\r\n          var checker = _step7.value;\r\n          checker.addEventListener('change', function (e) {\r\n            checker.parentElement.parentElement.parentElement.classList.toggle('active');\r\n\r\n            if (!checker.checked) {\r\n              checkAll.checked = false;\r\n            }\r\n\r\n            var totalCheckbox = document.querySelectorAll('.users-table .check');\r\n            var totalChecked = document.querySelectorAll('.users-table .check:checked');\r\n\r\n            if (totalCheckbox && totalChecked) {\r\n              if (totalCheckbox.length == totalChecked.length) {\r\n                checkAll.checked = true;\r\n              } else {\r\n                checkAll.checked = false;\r\n              }\r\n            }\r\n          });\r\n        };\r\n\r\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\r\n          _loop();\r\n        }\r\n      } catch (err) {\r\n        _iterator7.e(err);\r\n      } finally {\r\n        _iterator7.f();\r\n      }\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var checkAll = document.querySelector('.check-all');\r\n    var checkers = document.querySelectorAll('.check');\r\n    var checkedSum = document.querySelector('.checked-sum');\r\n\r\n    if (checkedSum && checkAll && checkers) {\r\n      checkAll.addEventListener('change', function (e) {\r\n        var totalChecked = document.querySelectorAll('.users-table .check:checked');\r\n        checkedSum.textContent = totalChecked.length;\r\n      });\r\n\r\n      var _iterator8 = _createForOfIteratorHelper(checkers),\r\n          _step8;\r\n\r\n      try {\r\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\r\n          var checker = _step8.value;\r\n          checker.addEventListener('change', function (e) {\r\n            var totalChecked = document.querySelectorAll('.users-table .check:checked');\r\n            checkedSum.textContent = totalChecked.length;\r\n          });\r\n        }\r\n      } catch (err) {\r\n        _iterator8.e(err);\r\n      } finally {\r\n        _iterator8.f();\r\n      }\r\n    }\r\n  })();\r\n\r\n});","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\SentimentCharts.js",["131","132"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\TweetList.js",["133","134"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\WordCloud.js",["135","136"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\TimeLines.js",["137","138","139"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Home.js",["140","141","142"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Maps.js",["143","144"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Collection.js",["145"],"import React from 'react';\r\n\r\nclass Collection extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.handleDbChange = this.handleDbChange.bind(this)\r\n       \r\n        console.log(props.data)\r\n    }\r\n\r\n    handleDbChange = (db) => {\r\n        \r\n        this.props.parentCallback(db);  \r\n            \r\n      }\r\n\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <ul class=\"cat-sub-menu\">\r\n\r\n            {this.props.data.map((object, i)=>{\r\n                return <li>\r\n                <a href=\"#\" onClick={() => {this.handleDbChange(object)}}>{object}</a>\r\n            </li>;\r\n            \r\n            })}\r\n                               \r\n        </ul>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Collection;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Dbs.js",["146"],"import React from 'react';\r\n\r\nclass Dbs extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.handleMongoDbChange = this.handleMongoDbChange.bind(this)\r\n\r\n        }\r\n\r\n    handleMongoDbChange = (db) => {\r\n\r\n        this.props.parentCallback(db);  \r\n            \r\n      }\r\n\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <ul class=\"cat-sub-menu\">\r\n\r\n            {this.props.data.map((object, i)=>{\r\n                return <li>\r\n                <a href=\"#\" onClick={() => {this.handleMongoDbChange(object)}}>{object}</a>\r\n            </li>;\r\n            \r\n            })}\r\n                               \r\n        </ul>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Dbs;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\preloader.js",["147","148","149"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./preloader.css\";\r\n\r\nfunction PreLoader() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setloading] = useState(undefined);\r\n  const [completed, setcompleted] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setloading(false);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!completed ? (\r\n        <>\r\n          {!loading ? (\r\n            <div className=\"spinner\">\r\n              <span>Loading...</span>\r\n              <div className=\"half-spinner\"></div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"completed\">&#x2713;</div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PreLoader;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\PieChart.js",["150"],"import React from \"react\";\r\nimport {Pie} from 'react-chartjs-2';\r\n\r\n\r\nconst PieChart = (props) =>{\r\n  var negative = props.negative\r\n  var positive = props.positive\r\n  var neutral = props.neutral\r\n  var data2 = [negative, neutral, positive]\r\n\r\n  \r\n  let total = data2.reduce((accumulator, currentValue) => accumulator + currentValue);\r\n    \r\n  var labels = data2.map(value => Math.round((value / total) * 100) + '%');\r\n\r\n  const  data = {\r\n    labels: [\r\n      'Negative = ' + labels[0],\r\n      'Neutral = '  + labels[1],\r\n      'Positive = ' + labels[2]\r\n    ],\r\n    datasets: [{\r\n      label: 'Sentiment',\r\n      data: [negative, neutral, positive],\r\n      \r\n      backgroundColor: [\r\n        'rgb(255, 99, 132)',\r\n        'rgb(54, 162, 235)',\r\n        'rgb(255, 205, 86)'\r\n      ],\r\n      hoverOffset: 4\r\n    }]\r\n  }\r\n  const option = {\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(tooltipItem, data) {\r\n          var dataset = data.datasets[tooltipItem.datasetIndex];\r\n          var meta = dataset._meta[Object.keys(dataset._meta)[0]];\r\n          var total = meta.total;\r\n          var currentValue = dataset.data[tooltipItem.index];\r\n          var percentage = parseFloat((currentValue/total*100).toFixed(1));\r\n          return currentValue + ' (' + percentage + '%)';\r\n        },\r\n        title: function(tooltipItem, data) {\r\n          return data.labels[tooltipItem[0].index];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n    return(\r\n        <div>\r\n            <Pie\r\n\t data = {data}\r\n\twidth={100}\r\n\theight={400}\r\n            />\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default PieChart","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\Filters.js",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],"import axios from 'axios';\r\nimport SearchFilters from './SearchFilters';\r\nimport SearchText from './SearchText';\r\nimport SearchHashtag from './SearchHashtag';\r\nimport React, { useEffect } from 'react';\r\n\r\n\r\nclass Filters extends React.Component{\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.query=this.query.bind(this)\r\n\r\n        this.state = {\r\n          totalTweets: 0,\r\n          flagType: 0,\r\n          flagSentiment : 0,\r\n          counter : [],\r\n          oldData : [],\r\n          data: [],\r\n          tags : [],\r\n          text : [],\r\n          hashtags : [],\r\n          fromDate: null,\r\n          toDate : null,\r\n\r\n      }\r\n     \r\n      this.getData(this.props.db)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.db!==this.props.db){\r\n        this.getData(this.props.db)\r\n      }\r\n      \r\n    }\r\n\r\n    getData = (db) => {\r\n \r\n      \r\n      //TODO selezione db\r\n        axios.get('/tweet/getAnalyzedData', {\r\n          params: {\r\n            db: db\r\n          }\r\n        })\r\n        .then((response) => {\r\n          const data = response.data;\r\n          this.setState({data : data})\r\n          this.setState({oldData : data})\r\n          this.setState({totalTweets : data.length})\r\n          this.query()\r\n\r\n      })\r\n      .catch((error) => {\r\n          console.log('error: ', error)\r\n      });\r\n    \r\n      }\r\n    \r\n      //DATES FILTERS\r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n         \r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n      filterDataByDates = () => {   \r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.state.data = tempData//set Data\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.state.data = tempData //save filtered datas\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n         this.state.data = tempData //set Data\r\n    \r\n          }\r\n\r\n          this.handleQuery()\r\n    \r\n    \r\n      }\r\n\r\n      //END DATES FILTERS\r\n      \r\n      //TAGS SECTION\r\n\r\n      handleTags = (tags) => {\r\n        if(tags.length>this.state.tags.length){\r\n          this.state.tags = tags\r\n          this.filterByTags(tags)\r\n          this.handleQuery()\r\n        }else{\r\n          this.state.tags = tags\r\n          this.resetFilter()\r\n\r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].tags!==undefined){\r\n            while(j<this.state.data[i].tags.tag_me.length){\r\n              temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n            \r\n              while(k<tags.length){\r\n                if(temp.some(a => a.includes(tags[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n\r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n/// TEXT SECTION\r\n\r\nhandleText = (text) => {\r\n  if(text.length>this.state.text.length){\r\n\r\n    this.state.text=text \r\n    this.filterByText(text)\r\n    this.handleQuery()\r\n  }else{\r\n   this.state.text=text \r\n   this.resetFilter()\r\n  }\r\n}\r\n\r\n      filterByText = (text) => {\r\n\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].spacy!==undefined){\r\n            while(j<this.state.data[i].spacy.processed_text.length){\r\n              temp=this.state.data[i].spacy.processed_text[j].split(\" \")\r\n            \r\n              while(k<text.length){\r\n                if(temp.some(a => a.includes(text[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n\r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n  /// HASHTAGS SECTION\r\n\r\n  handleHashtags = (hashtags) => {\r\n    if(hashtags.length>this.state.hashtags.length){\r\n      this.state.hashtags=hashtags\r\n      this.filterByHashtags(hashtags)\r\n      this.handleQuery()\r\n    }else{\r\n      this.state.hashtags=hashtags\r\n      this.resetFilter()\r\n    }\r\n  }\r\n      filterByHashtags = (hashtags) => {\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n\r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].twitter_entities!==undefined){\r\n            if(this.state.data[i].twitter_entities.hashtags!==undefined){\r\n              while(j<this.state.data[i].twitter_entities.hashtags.length){\r\n                temp=this.state.data[i].twitter_entities.hashtags[j]\r\n               \r\n                while(k<hashtags.length){\r\n                  if(temp===hashtags[k].name){\r\n                    flag = true               \r\n                  }else{\r\n                    flag = false\r\n                  }\r\n                  k++\r\n                }\r\n    \r\n                if(flag===true){\r\n                  tempData[z]= this.state.data[i]\r\n                  z++\r\n                }\r\n                k=0\r\n                j++\r\n              }\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n               \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n      }\r\n\r\n      //RESET SECTIOn\r\n      resetFilter = () => {\r\n\r\n        \r\n\r\n        this.state.data= this.state.oldData\r\n\r\n        if(this.state.fromDate!==null || this.state.toDate!==null ){\r\n          this.filterDataByDates()\r\n        }\r\n        \r\n        if(this.state.tags.length!==0){\r\n          this.filterByTags(this.state.tags)\r\n        }\r\n\r\n        if(this.state.hashtags.length!==0){\r\n          this.filterByHashtags(this.state.hashtags)\r\n        }\r\n\r\n        if(this.state.text.length!==0){\r\n          this.filterByText(this.state.text)\r\n        }\r\n\r\n        this.handleQuery()\r\n\r\n      }\r\n\r\n            // CATEGORY\r\n      handleCategory = (event) => {\r\n\r\n        if(this.state.flagType!==0 && this.state.flagSentiment!==0){\r\n          this.state.flagType = event.target.value ;  \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n          this.filterByCategory();\r\n        }else if(event.target.value===0 && this.state.flagSentiment===0){\r\n          \r\n          this.state.flagType = event.target.value ; \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n          \r\n        }else{\r\n          this.state.flagType = event.target.value ;  \r\n          this.filterByCategory();     \r\n        }\r\n\r\n        \r\n      }\r\n\r\n      handleSentiment = (event) => {\r\n        if(this.state.flagType!==0 && this.state.flagSentiment!==0){\r\n          this.state.flagSentiment = event.target.value ; \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n          this.filterByCategory();\r\n        }else if(this.state.flagType==0 && event.target.value==0){\r\n         \r\n          this.state.flagSentiment = event.target.value ; \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n         \r\n        }else{\r\n          this.state.flagSentiment = event.target.value ;  \r\n          this.filterByCategory();     \r\n        } \r\n        \r\n      }\r\n\r\n      filterByCategory = () => {\r\n\r\n        var i=0;\r\n        var k = 0;\r\n        var temp = []\r\n        var flagAll = 0;\r\n        \r\n        if (this.state.flagType===0 || this.state.flagType==='0') { \r\n          \r\n          if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                    flagAll = 1;\r\n                  }\r\n                }\r\n                \r\n                if(this.state.data[i].sentiment['feel-it']!==undefined && flagAll===0){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              flagAll=0;\r\n              i++;\r\n            }\r\n\r\n          \r\n\r\n            \r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='neutral'){\r\n                    flagAll = 1;\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n \r\n                }\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined  && flagAll===0){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='neutral'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              flagAll=0;\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='negative'){\r\n                    flagAll = 1;\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n                  \r\n                     \r\n                }\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined  && flagAll===0){\r\n                 \r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='negative'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              i++;\r\n              flagAll=0;\r\n            }\r\n\r\n          }\r\n\r\n          \r\n\r\n\r\n          //Category Sent-it\r\n\r\n\r\n        } \r\n        \r\n        else if(this.state.flagType===1 || this.state.flagType==='1'){\r\n\r\n          if (this.state.flagSentiment===0 || this.state.flagSentiment==='0'){\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  temp[k]=this.state.data[i];\r\n                  k++;   \r\n                }\r\n             }\r\n            i++;\r\n          }\r\n          }else if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            \r\n\r\n            while(i<this.state.data.length){\r\n              \r\n              if(this.state.data[i].sentiment!==undefined){\r\n                \r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  \r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n                         \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n           \r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='neutral'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }         \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='negative')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }\r\n          \r\n\r\n\r\n\r\n          //Category Feel-it\r\n         \r\n        }else{\r\n\r\n          if (this.state.flagSentiment===0 || this.state.flagSentiment==='0'){\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  temp[k]=this.state.data[i];\r\n                  k++;   \r\n                }\r\n             }\r\n            i++;\r\n          }\r\n          }else if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='positive')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='neutral')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='negative')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }\r\n\r\n         \r\n\r\n      }\r\n      \r\n      this.state.data = temp\r\n      this.handleQuery();\r\n\r\n    }\r\n\r\n      \r\n\r\n\r\n   \r\n      //QUERY SECTIOn\r\n\r\n      handleQuery = () =>{\r\n        if(this.state.data.length===0){\r\n          \r\n          this.state.totalTweets=0\r\n          this.query()\r\n          \r\n        }else{\r\n          \r\n          this.state.totalTweets=this.state.data.length\r\n          this.query()\r\n        }\r\n      }\r\n\r\n      query = () =>{\r\n        this.props.parentCallback(this.state.data);\r\n      }\r\n      \r\n      \r\n\r\n    \r\n    render(){\r\n        return(      \r\n          <>      \r\n        <div className=\"row stat-cards\">\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Category</h4><br />\r\n                          <select id=\"sel1\" onChange={this.handleCategory} >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Sent-it</option>\r\n                            <option value=\"2\">Feel-it</option>\r\n\r\n                          </select>\r\n\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Sentiment</h4><br />\r\n                          <select id=\"sel1\" onChange={this.handleSentiment} >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Positive</option>\r\n                            <option value=\"2\">Neutral</option>\r\n                            <option value=\"3\">Negative</option>\r\n                          </select>\r\n\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>From </h4><br />\r\n                    <input type=\"date\" \r\n                    name=\"startDate\"\r\n                    onBlur={this.handleFromDatesChanges}/>\r\n\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>To </h4><br />\r\n                    <input type=\"date\"\r\n                    id=\"toDate\"\r\n                    onBlur={this.handleToDatesChanges} />\r\n                  </center>\r\n                </div>\r\n              </div> \r\n          \r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Total Tweets</h4><br />\r\n                     <h1> {this.state.totalTweets} </h1>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <div className=\"row stat-cards\">\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Tags</h4><br />\r\n                  <SearchFilters parentCallback = {this.handleTags.bind(this)} db = {this.props.db}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Processed Text</h4><br />\r\n                  <SearchText parentCallback = {this.handleText.bind(this)} db = {this.props.db}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Hashtags</h4><br />\r\n                  <SearchHashtag parentCallback = {this.handleHashtags.bind(this)} db = {this.props.db}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      </>)\r\n    }\r\n}\r\n\r\nexport default Filters","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\BarChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\MultiTimeLineChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\TimeLineChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SentimentFilters.js",["189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219"],"import axios from 'axios';\r\nimport SearchFilters from './SearchFilters';\r\nimport React from 'react';\r\nimport SearchText from './SearchText';\r\nimport SearchHashtag from './SearchHashtag';\r\n\r\nclass Filters extends React.Component{\r\n    constructor (props) {\r\n        super(props)\r\n        this.sendData=this.sendData.bind(this)\r\n\r\n        this.state = {\r\n            totalTweets: 0,\r\n            flagType: 0,\r\n            counter : [],\r\n            oldData : [],\r\n            data: [],\r\n            tags : [],\r\n            text : [],\r\n            hashtags : [],\r\n            dataGroupByDates: [],\r\n            fromDate: null,\r\n            toDate : null,\r\n\r\n        }\r\n        \r\n        this.getSentimentData(this.props.db)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.db!==this.props.db){\r\n        this.getSentimentData(this.props.db)\r\n      }\r\n      \r\n    }\r\n\r\n    getSentimentData = (db) => {\r\n\r\n      //TODO selezione db\r\n        axios.get('/tweet/getAnalyzedData', {\r\n          params: {\r\n            db: db\r\n          }\r\n        })\r\n        .then((response) => {\r\n          \r\n          const data = response.data;\r\n          var negative = 0\r\n          var positive = 0\r\n          var neutral = 0\r\n          var i=0\r\n          this.state.totalTweets = data.length\r\n          while(i<data.length){\r\n            if(data[i].sentiment!==undefined){\r\n              if(data[i].sentiment['sent-it']!==undefined){\r\n                if (data[i].sentiment['sent-it'].sentiment==='negative')\r\n                  negative++\r\n                else if (data[i].sentiment['sent-it'].sentiment==='positive')\r\n                  positive ++\r\n                else\r\n                neutral ++\r\n              }\r\n            }\r\n   \r\n              i++\r\n          }\r\n          i=0\r\n          while(i<data.length){\r\n            if(data[i].sentiment!==undefined){\r\n              if(data[i].sentiment['feel-it']!==undefined){\r\n                if (data[i].sentiment['feel-it'].sentiment==='negative')\r\n                  negative++\r\n                else if (data[i].sentiment['feel-it'].sentiment==='positive')\r\n                  positive ++\r\n                else\r\n                neutral ++\r\n              }\r\n\r\n            }\r\n\r\n    \r\n            i++\r\n        }\r\n    \r\n          var tempCounter = {\r\n              positive: positive,\r\n              negative: negative,\r\n              neutral: neutral,\r\n           }\r\n    \r\n    \r\n          this.setState({ counter: tempCounter })\r\n          this.setState({data : data})\r\n          this.setState({oldData : data})\r\n\r\n          \r\n\r\n          var dataGroupByDates=[{\r\n            id:null,\r\n            counterPositive:null,\r\n            counterNegative:null,\r\n            counterNeutral:null,\r\n          }]\r\n    \r\n          \r\n          var j = 0\r\n          \r\n          if(this.state.data.length!==0){\r\n            var i =this.state.data.length-1\r\n            var dt = this.state.data[i].created_at.substring(0, 10)\r\n            dataGroupByDates[0].id=dt\r\n            i--\r\n            while(i>-1){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n              \r\n              if(dataGroupByDates[j].id===this.state.data[i].created_at.substring(0, 10)){\r\n                if( this.state.data[i].sentiment['feel-it'].sentiment==='positive'){\r\n                  dataGroupByDates[j].counterPositive++\r\n                }else if( this.state.data[i].sentiment['feel-it'].sentiment==='negative'){\r\n                  dataGroupByDates[j].counterNegative++\r\n                }else if( this.state.data[i].sentiment['feel-it'].sentiment==='neutral'){\r\n                  dataGroupByDates[j].counterNeutral++\r\n                }\r\n    \r\n    \r\n              }else{\r\n                j++\r\n    \r\n                dataGroupByDates.push({\r\n                  id:this.state.data[i].created_at.substring(0, 10),\r\n                  counterPositive:0,\r\n                  counterNegative:0,\r\n                  counterNeutral:0,\r\n                })\r\n                if( this.state.data[i].sentiment['feel-it'].sentiment==='positive'){\r\n                  dataGroupByDates[j].counterPositive++\r\n                }else if( this.state.data[i].sentiment['feel-it'].sentiment==='negative'){\r\n                  dataGroupByDates[j].counterNegative++\r\n                }else if( this.state.data[i].sentiment['feel-it'].sentiment==='neutral'){\r\n                  dataGroupByDates[j].counterNeutral++\r\n                }\r\n              }\r\n            }\r\n          }\r\n              i--\r\n            }\r\n            \r\n          }\r\n    \r\n          this.setState({dataGroupByDates : dataGroupByDates})\r\n          this.state.dataGroupByDates=dataGroupByDates     \r\n                      \r\n          this.sendData()\r\n      })\r\n      .catch((error) => {\r\n          console.log('error: ', error)\r\n      });\r\n    \r\n      }\r\n    \r\n      //DATES FILTERS\r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n         \r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n      filterDataByDates = () => {   \r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.state.data = tempData//set Data\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.state.data = tempData //save filtered datas\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n         this.state.data = tempData //set Data\r\n    \r\n          }\r\n\r\n          this.handleQuery()\r\n    \r\n    \r\n      }\r\n\r\n      //END DATES FILTERS\r\n    \r\n      // CATEGORY\r\n      handleCategory = (event) => {\r\n        this.state.flagType = event.target.value        \r\n        this.handleQuery()\r\n      }\r\n\r\n      //END CATEGORY\r\n\r\n\r\n\r\n      handleTags = (tags) => {\r\n        if(tags.length>this.state.tags.length){\r\n          this.state.tags = tags\r\n          this.filterByTags(tags)\r\n          this.handleQuery()\r\n        }else{\r\n          this.state.tags = tags\r\n          this.resetFilter()\r\n\r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n\r\n        //this.setState({oldData: this.state.data}) //save last data state\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].tags!==undefined){\r\n            while(j<this.state.data[i].tags.tag_me.length){\r\n              temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n              \r\n              while(k<tags.length){\r\n                if(temp.some(a => a.includes(tags[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n  \r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n\r\n          i++\r\n        }\r\n\r\n        this.state.data = tempData //set Data\r\n        \r\n        \r\n        \r\n      }\r\n\r\n\r\n      \r\n/// TEXT SECTION\r\n\r\nhandleText = (text) => {\r\n  if(text.length>this.state.text.length){\r\n\r\n    this.state.text=text \r\n    this.filterByText(text)\r\n    this.handleQuery()\r\n  }else{\r\n   this.state.text=text \r\n   this.resetFilter()\r\n  }\r\n}\r\n\r\nfilterByText = (text) => {\r\n\r\n  var i =0\r\n  var j =0\r\n  var k = 0\r\n  var z = 0\r\n  var temp\r\n  var tempData = []\r\n  var flag = false\r\n  \r\n  while(i<this.state.data.length){\r\n    j=0\r\n    if(this.state.data[i].spacy!==undefined){\r\n      while(j<this.state.data[i].spacy.processed_text.length){\r\n        temp=this.state.data[i].spacy.processed_text[j].split(\" \")\r\n        \r\n        while(k<text.length){\r\n          if(temp.some(a => a.includes(text[k].name))===true){\r\n            flag = true               \r\n          }else{\r\n            flag = false\r\n          }\r\n          k++\r\n        }\r\n  \r\n        if(flag===true){\r\n          tempData[z]= this.state.data[i]\r\n          z++\r\n        }\r\n        k=0\r\n        j++\r\n      }\r\n    }\r\n\r\n    i++\r\n  }\r\n\r\n \r\n  this.state.data=tempData\r\n  this.state.totalTweets=tempData.length\r\n\r\n  \r\n}\r\n\r\n/// HASHTAGS SECTION\r\n\r\nhandleHashtags = (hashtags) => {\r\n  if(hashtags.length>this.state.hashtags.length){\r\n    this.state.hashtags=hashtags\r\n    this.filterByHashtags(hashtags)\r\n    this.handleQuery()\r\n  }else{\r\n    this.state.hashtags=hashtags\r\n    this.resetFilter()\r\n  }\r\n}\r\n\r\nfilterByHashtags = (hashtags) => {\r\n  var i =0\r\n  var j =0\r\n  var k = 0\r\n  var z = 0\r\n  var temp\r\n  var tempData = []\r\n  var flag = false\r\n\r\n  while(i<this.state.data.length){\r\n    j=0\r\n    if(this.state.data[i].twitter_entities!==undefined){\r\n    if(this.state.data[i].twitter_entities.hashtags!==undefined){\r\n      while(j<this.state.data[i].twitter_entities.hashtags.length){\r\n        temp=this.state.data[i].twitter_entities.hashtags[j]\r\n       \r\n        while(k<hashtags.length){\r\n          if(temp===hashtags[k].name){\r\n            flag = true               \r\n          }else{\r\n            flag = false\r\n          }\r\n          k++\r\n        }\r\n\r\n        if(flag===true){\r\n          tempData[z]= this.state.data[i]\r\n          z++\r\n        }\r\n        k=0\r\n        j++\r\n      }\r\n    }\r\n  }\r\n\r\n    i++\r\n  }\r\n\r\n         \r\n  this.state.data=tempData\r\n  this.state.totalTweets=tempData.length\r\n  \r\n}\r\n\r\n  //QUERY SECTION  \r\nhandleQuery = () => {\r\n  if(this.state.data.length===0){\r\n    \r\n    var tempCounter = {\r\n      positive:0,\r\n      negative:0,\r\n      neutral:0\r\n    }\r\n    this.state.totalTweets=0\r\n    this.state.counter = tempCounter //reset counter\r\n    this.sendData()\r\n    \r\n  }else{\r\n    this.state.totalTweets=this.state.data.length\r\n    this.query()\r\n  }\r\n}\r\n\r\n      query = () => {\r\n       \r\n        var negative = 0\r\n        var positive = 0\r\n        var neutral = 0\r\n        var i=0\r\n        var tempCounter \r\n        \r\n        if (this.state.flagType===0 || this.state.flagType==='0') {               \r\n          while(i<this.state.data.length){\r\n            if(this.state.data[i].sentiment!==undefined){\r\n              if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n            \r\n            if (this.state.data[i].sentiment['sent-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['sent-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n              }\r\n            }\r\n            i++\r\n          }\r\n          i=0\r\n          while(i<this.state.data.length){\r\n            if(this.state.data[i].sentiment!==undefined){\r\n              if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n            if (this.state.data[i].sentiment['feel-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['feel-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n              }}\r\n            i++\r\n          }\r\n    \r\n          tempCounter = {\r\n            positive: positive,\r\n            negative: negative,\r\n            neutral: neutral,\r\n         }\r\n\r\n        }else if(this.state.flagType===1 || this.state.flagType==='1'){\r\n        \r\n          while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n\r\n            if (this.state.data[i].sentiment['sent-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['sent-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n            \r\n\r\n              }\r\n            }\r\n            i++\r\n          }\r\n          tempCounter = {\r\n            positive: positive,\r\n            negative: negative,\r\n            neutral: neutral,\r\n         }\r\n         \r\n        }else{\r\n          \r\n          while(i<this.state.data.length){\r\n            if(this.state.data[i].sentiment!==undefined){\r\n              if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n            if (this.state.data[i].sentiment['feel-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['feel-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n              }\r\n            }\r\n            i++\r\n          }\r\n          tempCounter = {\r\n            positive: positive,\r\n            negative: negative,\r\n            neutral: neutral,\r\n         }\r\n        }    \r\n        \r\n        this.state.counter = tempCounter\r\n\r\n         \r\n\r\n          \r\n\r\n        var dataGroupByDates=[{\r\n          id:null,\r\n          counterPositive:null,\r\n          counterNegative:null,\r\n          counterNeutral:null,\r\n        }]\r\n  \r\n        \r\n        var j = 0\r\n        \r\n        if(this.state.data.length!==0){\r\n          var i =this.state.data.length-1\r\n          var dt = this.state.data[i].created_at.substring(0, 10)\r\n          dataGroupByDates[0].id=dt\r\n          i--\r\n          while(i>-1){\r\n            if(this.state.data[i].sentiment!==undefined){\r\n              if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n            \r\n            if(dataGroupByDates[j].id===this.state.data[i].created_at.substring(0, 10)){\r\n              if( this.state.data[i].sentiment['feel-it'].sentiment==='positive'){\r\n                dataGroupByDates[j].counterPositive++\r\n              }else if( this.state.data[i].sentiment['feel-it'].sentiment==='negative'){\r\n                dataGroupByDates[j].counterNegative++\r\n              }else if( this.state.data[i].sentiment['feel-it'].sentiment==='neutral'){\r\n                dataGroupByDates[j].counterNeutral++\r\n              }\r\n  \r\n  \r\n            }else{\r\n              j++\r\n  \r\n              dataGroupByDates.push({\r\n                id:this.state.data[i].created_at.substring(0, 10),\r\n                counterPositive:0,\r\n                counterNegative:0,\r\n                counterNeutral:0,\r\n              })\r\n              if( this.state.data[i].sentiment['feel-it'].sentiment==='positive'){\r\n                dataGroupByDates[j].counterPositive++\r\n              }else if( this.state.data[i].sentiment['feel-it'].sentiment==='negative'){\r\n                dataGroupByDates[j].counterNegative++\r\n              }else if( this.state.data[i].sentiment['feel-it'].sentiment==='neutral'){\r\n                dataGroupByDates[j].counterNeutral++\r\n              }\r\n            }\r\n          }\r\n        }\r\n            i--\r\n          }\r\n          \r\n        }\r\n  \r\n        this.setState({dataGroupByDates : dataGroupByDates})\r\n        this.state.dataGroupByDates=dataGroupByDates     \r\n                    \r\n        this.sendData()\r\n      }\r\n\r\n\r\n      resetFilter = () => {\r\n\r\n        this.state.data= this.state.oldData\r\n\r\n        if(this.state.fromDate!==null || this.state.toDate!==null ){\r\n          this.filterDataByDates()\r\n        }\r\n        \r\n        if(this.state.tags.length!==0){\r\n          this.filterByTags(this.state.tags)\r\n        }\r\n\r\n        if(this.state.hashtags.length!==0){\r\n          this.filterByHashtags(this.state.hashtags)\r\n        }\r\n\r\n        if(this.state.text.length!==0){\r\n          this.filterByText(this.state.text)\r\n        }\r\n\r\n        this.handleQuery()\r\n\r\n      }\r\n\r\n    \r\n      sendData = () =>{\r\n        this.props.parentCallback(this.state.dataGroupByDates,this.state.counter);\r\n      }\r\n      \r\n      \r\n\r\n    \r\n    render(){\r\n        return(            \r\n          <>\r\n            <div className=\"row stat-cards\">\r\n              <div className=\"col-md-4 col-xl-4\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Category</h4><br />\r\n                          <select id=\"sel1\" onChange={this.handleCategory} >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Sent-it</option>\r\n                            <option value=\"2\">Feel-it</option>\r\n\r\n                          </select>\r\n\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-6 col-xl-6\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>From </h4><br />\r\n                          <input type=\"date\" \r\n                          name=\"startDate\"\r\n                          onBlur={this.handleFromDatesChanges}/>\r\n\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>To </h4><br />\r\n                          <input type=\"date\"\r\n                          id=\"toDate\"\r\n                          onBlur={this.handleToDatesChanges} />\r\n                        </center>\r\n                      </div>\r\n                    </div> \r\n                \r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-2 col-xl-2\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 col-xl-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Total Tweets</h4><br />\r\n                           <h1> {this.state.totalTweets} </h1>\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"row stat-cards\">\r\n            <div className=\"col-md-4 col-xl-4\">\r\n              <article className=\"stat-cards-item\">\r\n                <div className=\"row\">\r\n    \r\n                  <div className=\"col-md-12 col-xl-12\">\r\n                    <div className=\"stat-cards-info\">\r\n                      <center><h4>Tags</h4><br />\r\n                      <SearchFilters parentCallback = {this.handleTags.bind(this)} db = {this.props.db}/>\r\n                        \r\n                      </center>\r\n                    </div>\r\n                  </div>\r\n    \r\n    \r\n                </div>\r\n    \r\n              </article>\r\n            </div>\r\n    \r\n            <div className=\"col-md-4 col-xl-4\">\r\n              <article className=\"stat-cards-item\">\r\n                <div className=\"row\">\r\n    \r\n                  <div className=\"col-md-12 col-xl-12\">\r\n                    <div className=\"stat-cards-info\">\r\n                      <center><h4>Processed Text</h4><br />\r\n                      <SearchText parentCallback = {this.handleText.bind(this)} db = {this.props.db}/>\r\n                        \r\n                      </center>\r\n                    </div>\r\n                  </div>\r\n    \r\n    \r\n                </div>\r\n    \r\n              </article>\r\n            </div>\r\n    \r\n            <div className=\"col-md-4 col-xl-4\">\r\n              <article className=\"stat-cards-item\">\r\n                <div className=\"row\">\r\n    \r\n                  <div className=\"col-md-12 col-xl-12\">\r\n                    <div className=\"stat-cards-info\">\r\n                      <center><h4>Hashtags</h4><br />\r\n                      <SearchHashtag parentCallback = {this.handleHashtags.bind(this)} db = {this.props.db}/>\r\n                        \r\n                      </center>\r\n                    </div>\r\n                  </div>\r\n    \r\n    \r\n                </div>\r\n    \r\n              </article>\r\n            </div>\r\n    \r\n    \r\n          </div>\r\n          </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Filters","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\TimeLinesFilters.js",["220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246"],"import axios from 'axios';\r\nimport SearchFilters from './SearchFilters';\r\nimport SearchText from './SearchText';\r\nimport SearchHashtag from './SearchHashtag';\r\nimport React from 'react';\r\n\r\n\r\nclass Filters extends React.Component{\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.query=this.query.bind(this)\r\n\r\n        this.state = {\r\n          totalTweets: 0,\r\n          flagType: 0,\r\n          counter : [],\r\n          oldData : [],\r\n          data: [],\r\n          tags : [],\r\n          text : [],\r\n          hashtags : [],\r\n          fromDate: null,\r\n          toDate : null,\r\n\r\n      }\r\n     \r\n      this.getData(this.props.db)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.db!==this.props.db){\r\n        this.getData(this.props.db)\r\n      }\r\n      \r\n    }\r\n   \r\n    getData = (db) => {\r\n\r\n        //TODO selezione db\r\n          axios.get('/tweet/getDataSortByDate',{\r\n            params: {\r\n              db: db\r\n            }\r\n          })\r\n          .then((response) => {\r\n            const data = response.data;\r\n            this.setState({data : data})\r\n            this.setState({oldData : data})\r\n            this.setState({totalTweets : data.length})\r\n            this.query()\r\n  \r\n        })\r\n        .catch((error) => {\r\n            console.log('error: ', error)\r\n        });\r\n      \r\n        }\r\n\r\n      //DATES FILTERS\r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n         \r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n    \r\n      filterDataByDates = () => {\r\n       \r\n\r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n          this.setState({oldData: this.state.data}) //save last data state\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n          this.state.data=tempData\r\n          this.state.totalTweets=tempData.length\r\n          }\r\n\r\n          this.handleQuery()\r\n        \r\n    \r\n    \r\n      }\r\n         //END DATES FILTERS\r\n\r\n      //TAGS SECTION\r\n      handleTags = (tags) => {\r\n        if(tags.length>this.state.tags.length){\r\n          this.state.tags = tags\r\n          this.filterByTags(tags)\r\n          this.handleQuery()\r\n        }else{\r\n          this.state.tags = tags\r\n          this.resetFilter()\r\n\r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].tags!==undefined){\r\n            while(j<this.state.data[i].tags.tag_me.length){\r\n              temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n              \r\n              while(k<tags.length){\r\n                if(temp.some(a => a.includes(tags[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n  \r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n/// TEXT SECTION\r\n\r\nhandleText = (text) => {\r\n  if(text.length>this.state.text.length){\r\n\r\n    this.state.text=text \r\n    this.filterByText(text)\r\n    this.handleQuery()\r\n  }else{\r\n   this.state.text=text \r\n   this.resetFilter()\r\n  }\r\n}\r\n\r\n      filterByText = (text) => {\r\n\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].spacy!==undefined){\r\n            while(j<this.state.data[i].spacy.processed_text.length){\r\n              temp=this.state.data[i].spacy.processed_text[j].split(\" \")\r\n              \r\n              while(k<text.length){\r\n                if(temp.some(a => a.includes(text[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n  \r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n  /// HASHTAGS SECTION\r\n\r\n  handleHashtags = (hashtags) => {\r\n    if(hashtags.length>this.state.hashtags.length){\r\n      this.state.hashtags=hashtags\r\n      this.filterByHashtags(hashtags)\r\n      this.handleQuery()\r\n    }else{\r\n      this.state.hashtags=hashtags\r\n      this.resetFilter()\r\n    }\r\n  }\r\n      filterByHashtags = (hashtags) => {\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n\r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].twitter_entities!==undefined){\r\n            while(j<this.state.data[i].twitter_entities.hashtags.length){\r\n              temp=this.state.data[i].twitter_entities.hashtags[j]\r\n             \r\n              while(k<hashtags.length){\r\n                if(temp===hashtags[k].name){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n  \r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n\r\n          i++\r\n        }\r\n\r\n               \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n      }\r\n\r\n            //RESET SECTIOn\r\n            resetFilter = () => {\r\n\r\n              this.state.data= this.state.oldData\r\n      \r\n              if(this.state.fromDate!==null || this.state.toDate!==null ){\r\n                this.filterDataByDates()\r\n              }\r\n              \r\n              if(this.state.tags.length!==0){\r\n                this.filterByTags(this.state.tags)\r\n              }\r\n      \r\n              if(this.state.hashtags.length!==0){\r\n                this.filterByHashtags(this.state.hashtags)\r\n              }\r\n      \r\n              if(this.state.text.length!==0){\r\n                this.filterByText(this.state.text)\r\n              }\r\n      \r\n              this.handleQuery()\r\n      \r\n            }\r\n   \r\n\r\n\r\n            handleQuery = () =>{\r\n              if(this.state.data.length===0){\r\n                \r\n                this.state.totalTweets=0\r\n                this.query()\r\n                \r\n              }else{\r\n                this.state.totalTweets=this.state.data.length\r\n                this.query()\r\n              }\r\n            }\r\n\r\n      query = () =>{\r\n        this.props.parentCallback(this.state.data);\r\n      }\r\n      \r\n      \r\n\r\n    \r\n    render(){\r\n        return(      \r\n          <>      \r\n        <div className=\"row stat-cards\">\r\n\r\n        <div className=\"col-md-6 col-xl-6\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>From </h4><br />\r\n                    <input type=\"date\" \r\n                    name=\"startDate\"\r\n                    onBlur={this.handleFromDatesChanges}/>\r\n\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>To </h4><br />\r\n                    <input type=\"date\"\r\n                    id=\"toDate\"\r\n                    onBlur={this.handleToDatesChanges} />\r\n                  </center>\r\n                </div>\r\n              </div> \r\n          \r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n        <div className=\"col-md-6 col-xl-6\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Total Tweets</h4><br />\r\n                     <h1> {this.state.totalTweets} </h1>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <div className=\"row stat-cards\">\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Tags</h4><br />\r\n                  <SearchFilters parentCallback = {this.handleTags.bind(this)} db = {this.props.db}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Processed Text</h4><br />\r\n                  <SearchText parentCallback = {this.handleText.bind(this)} db = {this.props.db}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Hashtags</h4><br />\r\n                  <SearchHashtag parentCallback = {this.handleHashtags.bind(this)} db = {this.props.db}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      </>)\r\n    }\r\n}\r\n\r\nexport default Filters","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\TweetsTable.js",["247"],"import React, { useState } from \"react\";\r\n\r\n\r\nimport \"./table.css\";\r\nimport Table from \".\";\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport XLSX from 'xlsx'\r\n\r\nvar exportData=[];\r\nconst columns = [\r\n  { title: \"username\", field: \"author_username\", },\r\n  { title: \"text\", field: \"raw_text\", },\r\n  { title: \"tags\", field: \"tags\",  }]\r\n\r\nconst setData = (props) =>{\r\n \r\n  var i = 0\r\n  while (i<props.data.length) {\r\n    exportData.push({\r\n      author_username:props.data[i].author_username,\r\n      raw_text:props.data[i].raw_text,\r\n      tags:printTags(props.data[i])\r\n    })\r\n    i++\r\n  }  \r\n}\r\n\r\nconst downloadExcel = () => {\r\n  const newData = exportData.map(row => {\r\n    delete row.tableData\r\n    return row\r\n  })\r\n  const workSheet = XLSX.utils.json_to_sheet(newData)\r\n  const workBook = XLSX.utils.book_new()\r\n  XLSX.utils.book_append_sheet(workBook, workSheet, \"students\")\r\n  //Buffer\r\n  XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" })\r\n  //Binary string\r\n  XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" })\r\n  //Download\r\n  XLSX.writeFile(workBook, \"TweetData.xlsx\")\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  const printTags = (data) =>{\r\n    var i = 0\r\n    var temp \r\n     var tags = []\r\n    \r\n     if(data.tags!==undefined){\r\n\r\n     while(i<data.tags.tag_me.length){\r\n        temp = data.tags.tag_me[i].split(\" : \")\r\n        tags = tags+\",\"+temp[0]\r\n        i++\r\n    }\r\n    return tags\r\n\r\n     }else{\r\n       return(\r\n         \"\"\r\n       )\r\n     }\r\n  \r\n    \r\n  }\r\n\r\nconst downloadPdf = () => {\r\n  const doc = new jsPDF('landscape')\r\n\r\n  console.log(exportData)\r\n  doc.text(\"Tweet Details\", 20, 10)\r\n  doc.autoTable({\r\n    theme: \"grid\",\r\n    columns: columns.map(col => ({ ...col, dataKey: col.field })),\r\n    body: exportData\r\n  })\r\n  doc.save('table.pdf')\r\n}\r\n\r\nconst DisplayTable = (props) => {\r\n  setData(props)\r\n  return (\r\n    <main className=\"container_table\">\r\n      <button className='button activeButton' onClick={() => {downloadPdf()}} > Export Table</button>\r\n      <button className='button activeButton' onClick={() => {downloadExcel()}} > Export Excel</button>\r\n      <br/><br/><br/>\r\n      <div className=\"wrapper_table\">\r\n        <Table data={props.data} rowsPerPage={100} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default DisplayTable;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchHashtag.js",["248","249","250","251"],"import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\nimport axios from 'axios';\r\n\r\n\r\n//https://www.npmjs.com/package/react-tag-autocomplete\r\nclass SearchHashtag extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n      hashtags: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n  \r\n\r\n\r\n    axios.get('/tweet/getHashtags',{\r\n      params: {\r\n        db: this.props.db\r\n      }\r\n    })\r\n        .then((response) => {\r\n          var i = 0;\r\n          var j = 0;\r\n          var k =0;\r\n          const data = response.data;\r\n          var strings = [];\r\n         \r\n          var tempSuggestion = []\r\n          //console.log(\"hashtags\"+data[0])\r\n          while(i<data.length){\r\n            \r\n            j=0\r\n            if(data[i]._id.hashtags!==undefined){\r\n              while(j<data[i]._id.hashtags.length){ \r\n                if(strings.indexOf(data[i]._id.hashtags[j])==-1){\r\n                  tempSuggestion.push(\r\n                    {\r\n                      id:0,\r\n                      name: data[i]._id.hashtags[j]\r\n                    }\r\n                  )\r\n                  strings.push(data[i]._id.hashtags[j]);\r\n                }    \r\n\r\n                //console.log(tempSuggestion)\r\n                j++\r\n              }\r\n            }\r\n\r\n\r\n              i++\r\n          }\r\n\r\n          //this.state.suggestions = tempSuggestion\r\n          this.setState({suggestions: tempSuggestion})\r\n         \r\n           \r\n      })\r\n      .catch((error) => {\r\n          console.log('error: ', error)\r\n      });\r\n    \r\n      \r\n\r\n    this.reactTags = React.createRef()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.db!==this.props.db){\r\n      axios.get('/tweet/getHashtags',{\r\n        params: {\r\n          db: this.props.db\r\n        }\r\n      })\r\n          .then((response) => {\r\n            var i = 0\r\n            var j = 0\r\n            var k =0\r\n            const data = response.data\r\n           \r\n            var tempSuggestion = []\r\n            var strings = []\r\n          \r\n            while(i<data.length){\r\n              \r\n              j=0\r\n              if(data[i]._id.hashtags!==undefined){\r\n                while(j<data[i]._id.hashtags.length){  \r\n                  if(strings.indexOf(data[i]._id.hashtags[j])==-1){\r\n                    tempSuggestion.push(\r\n                      {\r\n                        id:0,\r\n                        name: data[i]._id.hashtags[j]\r\n                      }\r\n                    )\r\n                    strings.push(data[i]._id.hashtags[j]);\r\n                  }    \r\n                  //console.log(tempSuggestion)\r\n                  j++\r\n                }\r\n              }\r\n  \r\n  \r\n                i++\r\n            }\r\n  \r\n            //this.state.suggestions = tempSuggestion\r\n            this.setState({suggestions: tempSuggestion})\r\n           \r\n             \r\n        })\r\n        .catch((error) => {\r\n            console.log('error: ', error)\r\n        });\r\n      \r\n        \r\n  \r\n      this.reactTags = React.createRef()\r\n    }\r\n    \r\n  }\r\n  \r\n\r\n  sendData = (hashtags) =>{\r\n    this.props.parentCallback(hashtags);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const hashtags = this.state.hashtags.slice(0)\r\n    hashtags.splice(i, 1)\r\n    this.setState({ hashtags })\r\n    this.sendData(hashtags)\r\n  }\r\n\r\n  onAddition (hashtag) {\r\n    const hashtags = [].concat(this.state.hashtags, hashtag)\r\n    this.setState({ hashtags })\r\n    this.sendData(hashtags)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        placeholderText=\"Add new Hashtag\"\r\n        ref={this.reactTags}\r\n        tags={this.state.hashtags}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchHashtag","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchFilters.js",["252"],"import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\nimport axios from 'axios';\r\n\r\n\r\n//https://www.npmjs.com/package/react-tag-autocomplete\r\nclass SearchFilters extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n      tags: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n  \r\n\r\n    axios.get('/tweet/getTags', {\r\n      params: {\r\n        db: this.props.db\r\n      }\r\n    })\r\n        .then((response) => {\r\n          var i = 0;\r\n          var j = 0;\r\n          var k =0;\r\n          const data = response.data;\r\n             \r\n          var temp ;\r\n          var tempSuggestion = [];\r\n          var strings = [];\r\n\r\n\r\n          while(i<data[i]._id.length){\r\n            j=0;\r\n            \r\n            if(data[i]._id!==undefined&&data[i]._id!==null){\r\n              \r\n              while(j<data[i]._id.tag_me.length){\r\n                \r\n                temp=data[i]._id.tag_me[j].split(\" : \")\r\n\r\n                if(strings.indexOf(temp[0])>-1){\r\n\r\n                }else{\r\n                  tempSuggestion[k] = {\r\n                    id:temp[1],\r\n                    name: temp[0]\r\n                  };\r\n                  strings.push(temp[0])\r\n                }\r\n\r\n\r\n                k++;\r\n                j++;\r\n              }\r\n            }\r\n              i++;  \r\n          }\r\n          \r\n          \r\n          //this.state.suggestions = tempSuggestion\r\n          this.setState({suggestions: tempSuggestion})\r\n         \r\n           \r\n      })\r\n      .catch((error) => {\r\n          console.log('error: ', error)\r\n      });\r\n    \r\n      \r\n\r\n    this.reactTags = React.createRef()\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.db!==this.props.db){\r\n      axios.get('/tweet/getTags', {\r\n        params: {\r\n          db: this.props.db\r\n        }\r\n      })\r\n          .then((response) => {\r\n            var i = 0;\r\n            var j = 0;\r\n            var k =0;\r\n            const data = response.data;\r\n               \r\n            var temp ;\r\n            var tempSuggestion = [];\r\n            var strings = [];\r\n            \r\n            while(i<data.length){\r\n              j=0;\r\n              if(data[i]._id!==undefined&&data[i]._id!==null){\r\n                while(j<data[i]._id.tag_me.length){\r\n                  temp=data[i]._id.tag_me[j].split(\" : \")\r\n                  \r\n                  if(strings.indexOf(temp[0])==-1){\r\n                    tempSuggestion[k] = {\r\n                      id:temp[1],\r\n                      name: temp[0]\r\n                    }\r\n                    strings.push(temp[0]);\r\n                  }\r\n  \r\n                  k++;\r\n                  j++;\r\n                }\r\n              }\r\n                i++;\r\n            }\r\n            \r\n            \r\n            //this.state.suggestions = tempSuggestion\r\n            this.setState({suggestions: tempSuggestion})\r\n           \r\n             \r\n        })\r\n        .catch((error) => {\r\n            console.log('error: ', error)\r\n        });\r\n      \r\n        \r\n  \r\n      this.reactTags = React.createRef()\r\n    }\r\n    \r\n  }\r\n  \r\n\r\n  sendData = (tags) =>{\r\n    this.props.parentCallback(tags);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const tags = this.state.tags.slice(0)\r\n    tags.splice(i, 1)\r\n    this.setState({ tags })\r\n    this.sendData(tags)\r\n  }\r\n\r\n  onAddition (tag) {\r\n    const tags = [].concat(this.state.tags, tag)\r\n    this.setState({ tags })\r\n    this.sendData(tags)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        ref={this.reactTags}\r\n        tags={this.state.tags}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchFilters","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchText.js",["253","254"],"import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\nimport axios from 'axios';\r\n\r\n\r\n//https://www.npmjs.com/package/react-tag-autocomplete\r\nclass SearchText extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n      text: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n  \r\n\r\n\r\n    axios.get('/tweet/getText',{\r\n      params: {\r\n        db: this.props.db\r\n      }\r\n    })\r\n        .then((response) => {\r\n          var i = 1;\r\n          var j = 0;\r\n          var temp;\r\n          var strings = [];\r\n          const data = response.data\r\n          //var temp =data[0]._id.processed_text[0].split(\" \")\r\n          \r\n          var tempSuggestion = []\r\n       \r\n          while(i<data.length){\r\n            j=0;\r\n            \r\n            if(data[i]._id!==undefined&&data[i]._id!==null){\r\n             \r\n            while(j<data[i]._id.processed_text.length){\r\n              \r\n              temp=data[i]._id.processed_text[j].split(\" \")\r\n\r\n              if(strings.indexOf(temp[0])==-1){\r\n                tempSuggestion.push({\r\n                  id:0,\r\n                  name: temp[0]      \r\n                });\r\n                strings.push(temp[0]);\r\n              }\r\n\r\n\r\n              j++;\r\n            }\r\n          }\r\n\r\n              i++;\r\n          }\r\n          \r\n         \r\n\r\n          this.setState({suggestions: tempSuggestion})\r\n         \r\n           \r\n      })\r\n      .catch((error) => {\r\n          console.log('error: ', error)\r\n      });\r\n    \r\n      \r\n\r\n    this.reactTags = React.createRef()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.db!==this.props.db){\r\n      axios.get('/tweet/getText',{\r\n        params: {\r\n          db: this.props.db\r\n        }\r\n      })\r\n          .then((response) => {\r\n            var i = 0;\r\n            var j = 0;\r\n            var temp;\r\n            const data = response.data;\r\n            //var temp =data[0]._id.processed_text[0].split(\" \")\r\n            var tempSuggestion = [];\r\n            var strings = [];\r\n            while(i<data.length){\r\n              j=0\r\n              if(data[i]._id!==undefined&&data[i]._id!==null){\r\n              while(j<data[i]._id.processed_text.length){\r\n                temp=data[i]._id.processed_text[j].split(\" \")\r\n                \r\n                if(strings.indexOf(temp[0])==-1){\r\n                  tempSuggestion.push({\r\n                    id:0,\r\n                    name: temp[0]      \r\n                  });\r\n                  strings.push(temp[0]);\r\n                }\r\n                j++\r\n              }\r\n            }\r\n  \r\n                i++\r\n            }\r\n            \r\n           \r\n  \r\n            this.setState({suggestions: tempSuggestion})\r\n           \r\n             \r\n        })\r\n        .catch((error) => {\r\n            console.log('error: ', error)\r\n        });\r\n      \r\n        \r\n  \r\n      this.reactTags = React.createRef()\r\n    }\r\n  }\r\n\r\n  sendData = (text) =>{\r\n    this.props.parentCallback(text);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const text = this.state.text.slice(0)\r\n    text.splice(i, 1)\r\n    this.setState({ text })\r\n    this.sendData(text)\r\n  }\r\n\r\n  onAddition (tag) {\r\n    const text = [].concat(this.state.text, tag)\r\n    this.setState({ text })\r\n    this.sendData(text)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        placeholderText=\"Add new Text\"\r\n        ref={this.reactTags}\r\n        tags={this.state.text}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchText","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\index.jsx",[],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\hooks\\useTable.js",["255","256"],"import { useState, useEffect } from \"react\";\r\n\r\nconst calculateRange = (data, rowsPerPage) => {\r\n  const range = [];\r\n  const num = Math.ceil(data.length / rowsPerPage);\r\n  let i = 1;\r\n  for (let i = 1; i <= num; i++) {\r\n    range.push(i);\r\n  }\r\n  return range;\r\n};\r\n\r\nconst sliceData = (data, page, rowsPerPage) => {\r\n  return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\r\n};\r\n\r\nconst useTable = (data, page, rowsPerPage) => {\r\n  const [tableRange, setTableRange] = useState([]);\r\n  const [slice, setSlice] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const range = calculateRange(data, rowsPerPage);\r\n    setTableRange([...range]);\r\n\r\n    const slice = sliceData(data, page, rowsPerPage);\r\n    setSlice([...slice]);\r\n  }, [data, setTableRange, page, setSlice]);\r\n\r\n  return { slice, range: tableRange };\r\n};\r\n\r\nexport default useTable;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\TableFooter\\index.jsx",[],{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":110,"column":7,"nodeType":"263","messageId":"264","endLine":110,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":111,"column":7,"nodeType":"263","messageId":"264","endLine":111,"endColumn":17},{"ruleId":"265","severity":1,"message":"266","line":128,"column":5,"nodeType":"267","messageId":"268","endLine":178,"endColumn":6},{"ruleId":"269","severity":1,"message":"270","line":168,"column":7,"nodeType":"271","messageId":"272","endLine":177,"endColumn":8},{"ruleId":"265","severity":1,"message":"266","line":190,"column":7,"nodeType":"267","messageId":"268","endLine":203,"endColumn":8},{"ruleId":"273","severity":1,"message":"274","line":3,"column":195,"nodeType":"275","messageId":"276","endLine":3,"endColumn":197},{"ruleId":"273","severity":1,"message":"274","line":3,"column":218,"nodeType":"275","messageId":"276","endLine":3,"endColumn":220},{"ruleId":"277","severity":1,"message":"278","line":111,"column":56,"nodeType":"279","messageId":"280","endLine":111,"endColumn":58},{"ruleId":"277","severity":1,"message":"278","line":237,"column":40,"nodeType":"279","messageId":"280","endLine":237,"endColumn":42},{"ruleId":"261","severity":1,"message":"262","line":36,"column":7,"nodeType":"263","messageId":"264","endLine":36,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":39,"column":7,"nodeType":"263","messageId":"264","endLine":39,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":28,"column":7,"nodeType":"263","messageId":"264","endLine":28,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":29,"column":7,"nodeType":"263","messageId":"264","endLine":29,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":29,"column":5,"nodeType":"263","messageId":"264","endLine":29,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":96,"column":9,"nodeType":"263","messageId":"264","endLine":96,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":33,"column":7,"nodeType":"263","messageId":"264","endLine":33,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":34,"column":7,"nodeType":"263","messageId":"264","endLine":34,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":72,"column":9,"nodeType":"263","messageId":"264","endLine":72,"endColumn":19},{"ruleId":"281","severity":1,"message":"282","line":24,"column":25,"nodeType":"283","endLine":24,"endColumn":43},{"ruleId":"281","severity":1,"message":"282","line":33,"column":21,"nodeType":"283","endLine":33,"endColumn":41},{"ruleId":"281","severity":1,"message":"282","line":43,"column":21,"nodeType":"283","endLine":43,"endColumn":42},{"ruleId":"261","severity":1,"message":"262","line":34,"column":5,"nodeType":"263","messageId":"264","endLine":34,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":72,"column":9,"nodeType":"263","messageId":"264","endLine":72,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":26,"column":17,"nodeType":"283","endLine":26,"endColumn":75},{"ruleId":"284","severity":1,"message":"285","line":25,"column":17,"nodeType":"283","endLine":25,"endColumn":80},{"ruleId":"286","severity":1,"message":"287","line":5,"column":10,"nodeType":"288","messageId":"289","endLine":5,"endColumn":14},{"ruleId":"286","severity":1,"message":"290","line":5,"column":16,"nodeType":"288","messageId":"289","endLine":5,"endColumn":23},{"ruleId":"286","severity":1,"message":"291","line":7,"column":21,"nodeType":"288","messageId":"289","endLine":7,"endColumn":33},{"ruleId":"286","severity":1,"message":"292","line":34,"column":9,"nodeType":"288","messageId":"289","endLine":34,"endColumn":15},{"ruleId":"286","severity":1,"message":"293","line":5,"column":17,"nodeType":"288","messageId":"289","endLine":5,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":66,"column":11,"nodeType":"263","messageId":"264","endLine":66,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":68,"column":13,"nodeType":"263","messageId":"264","endLine":68,"endColumn":23},{"ruleId":"261","severity":1,"message":"262","line":82,"column":11,"nodeType":"263","messageId":"264","endLine":82,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":84,"column":13,"nodeType":"263","messageId":"264","endLine":84,"endColumn":23},{"ruleId":"261","severity":1,"message":"262","line":121,"column":9,"nodeType":"263","messageId":"264","endLine":121,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":142,"column":9,"nodeType":"263","messageId":"264","endLine":142,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":165,"column":10,"nodeType":"263","messageId":"264","endLine":165,"endColumn":20},{"ruleId":"261","severity":1,"message":"262","line":180,"column":11,"nodeType":"263","messageId":"264","endLine":180,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":184,"column":11,"nodeType":"263","messageId":"264","endLine":184,"endColumn":21},{"ruleId":"294","severity":1,"message":"295","line":207,"column":30,"nodeType":"296","messageId":"297","endLine":207,"endColumn":59},{"ruleId":"261","severity":1,"message":"262","line":227,"column":9,"nodeType":"263","messageId":"264","endLine":227,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":228,"column":9,"nodeType":"263","messageId":"264","endLine":228,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":238,"column":5,"nodeType":"263","messageId":"264","endLine":238,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":242,"column":4,"nodeType":"263","messageId":"264","endLine":242,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":264,"column":30,"nodeType":"296","messageId":"297","endLine":264,"endColumn":59},{"ruleId":"261","severity":1,"message":"262","line":284,"column":9,"nodeType":"263","messageId":"264","endLine":284,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":285,"column":9,"nodeType":"263","messageId":"264","endLine":285,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":294,"column":7,"nodeType":"263","messageId":"264","endLine":294,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":298,"column":7,"nodeType":"263","messageId":"264","endLine":298,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":340,"column":9,"nodeType":"263","messageId":"264","endLine":340,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":341,"column":9,"nodeType":"263","messageId":"264","endLine":341,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":350,"column":9,"nodeType":"263","messageId":"264","endLine":350,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":376,"column":11,"nodeType":"263","messageId":"264","endLine":376,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":377,"column":11,"nodeType":"263","messageId":"264","endLine":377,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":382,"column":11,"nodeType":"263","messageId":"264","endLine":382,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":383,"column":11,"nodeType":"263","messageId":"264","endLine":383,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":387,"column":11,"nodeType":"263","messageId":"264","endLine":387,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":396,"column":11,"nodeType":"263","messageId":"264","endLine":396,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":397,"column":11,"nodeType":"263","messageId":"264","endLine":397,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":400,"column":37,"nodeType":"279","messageId":"280","endLine":400,"endColumn":39},{"ruleId":"277","severity":1,"message":"278","line":400,"column":62,"nodeType":"279","messageId":"280","endLine":400,"endColumn":64},{"ruleId":"261","severity":1,"message":"262","line":402,"column":11,"nodeType":"263","messageId":"264","endLine":402,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":403,"column":11,"nodeType":"263","messageId":"264","endLine":403,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":407,"column":11,"nodeType":"263","messageId":"264","endLine":407,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":643,"column":7,"nodeType":"263","messageId":"264","endLine":643,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":657,"column":11,"nodeType":"263","messageId":"264","endLine":657,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":662,"column":11,"nodeType":"263","messageId":"264","endLine":662,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":52,"column":11,"nodeType":"263","messageId":"264","endLine":52,"endColumn":21},{"ruleId":"298","severity":1,"message":"299","line":109,"column":17,"nodeType":"288","messageId":"300","endLine":109,"endColumn":18},{"ruleId":"261","severity":1,"message":"262","line":152,"column":11,"nodeType":"263","messageId":"264","endLine":152,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":166,"column":11,"nodeType":"263","messageId":"264","endLine":166,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":168,"column":13,"nodeType":"263","messageId":"264","endLine":168,"endColumn":23},{"ruleId":"261","severity":1,"message":"262","line":182,"column":11,"nodeType":"263","messageId":"264","endLine":182,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":184,"column":13,"nodeType":"263","messageId":"264","endLine":184,"endColumn":23},{"ruleId":"261","severity":1,"message":"262","line":221,"column":9,"nodeType":"263","messageId":"264","endLine":221,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":242,"column":9,"nodeType":"263","messageId":"264","endLine":242,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":265,"column":10,"nodeType":"263","messageId":"264","endLine":265,"endColumn":20},{"ruleId":"261","severity":1,"message":"262","line":278,"column":9,"nodeType":"263","messageId":"264","endLine":278,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":288,"column":11,"nodeType":"263","messageId":"264","endLine":288,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":292,"column":11,"nodeType":"263","messageId":"264","endLine":292,"endColumn":21},{"ruleId":"294","severity":1,"message":"295","line":317,"column":30,"nodeType":"296","messageId":"297","endLine":317,"endColumn":59},{"ruleId":"261","severity":1,"message":"262","line":337,"column":9,"nodeType":"263","messageId":"264","endLine":337,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":350,"column":5,"nodeType":"263","messageId":"264","endLine":350,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":354,"column":4,"nodeType":"263","messageId":"264","endLine":354,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":376,"column":24,"nodeType":"296","messageId":"297","endLine":376,"endColumn":53},{"ruleId":"261","severity":1,"message":"262","line":397,"column":3,"nodeType":"263","messageId":"264","endLine":397,"endColumn":13},{"ruleId":"261","severity":1,"message":"262","line":398,"column":3,"nodeType":"263","messageId":"264","endLine":398,"endColumn":13},{"ruleId":"261","severity":1,"message":"262","line":407,"column":5,"nodeType":"263","messageId":"264","endLine":407,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":411,"column":5,"nodeType":"263","messageId":"264","endLine":411,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":455,"column":3,"nodeType":"263","messageId":"264","endLine":455,"endColumn":13},{"ruleId":"261","severity":1,"message":"262","line":456,"column":3,"nodeType":"263","messageId":"264","endLine":456,"endColumn":13},{"ruleId":"261","severity":1,"message":"262","line":469,"column":5,"nodeType":"263","messageId":"264","endLine":469,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":470,"column":5,"nodeType":"263","messageId":"264","endLine":470,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":474,"column":5,"nodeType":"263","messageId":"264","endLine":474,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":568,"column":9,"nodeType":"263","messageId":"264","endLine":568,"endColumn":19},{"ruleId":"298","severity":1,"message":"299","line":585,"column":15,"nodeType":"288","messageId":"300","endLine":585,"endColumn":16},{"ruleId":"261","severity":1,"message":"262","line":628,"column":9,"nodeType":"263","messageId":"264","endLine":628,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":636,"column":9,"nodeType":"263","messageId":"264","endLine":636,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":64,"column":11,"nodeType":"263","messageId":"264","endLine":64,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":66,"column":13,"nodeType":"263","messageId":"264","endLine":66,"endColumn":23},{"ruleId":"261","severity":1,"message":"262","line":80,"column":11,"nodeType":"263","messageId":"264","endLine":80,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":82,"column":13,"nodeType":"263","messageId":"264","endLine":82,"endColumn":23},{"ruleId":"261","severity":1,"message":"262","line":123,"column":9,"nodeType":"263","messageId":"264","endLine":123,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":124,"column":9,"nodeType":"263","messageId":"264","endLine":124,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":145,"column":9,"nodeType":"263","messageId":"264","endLine":145,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":146,"column":9,"nodeType":"263","messageId":"264","endLine":146,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":169,"column":11,"nodeType":"263","messageId":"264","endLine":169,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":170,"column":11,"nodeType":"263","messageId":"264","endLine":170,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":183,"column":11,"nodeType":"263","messageId":"264","endLine":183,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":187,"column":11,"nodeType":"263","messageId":"264","endLine":187,"endColumn":21},{"ruleId":"294","severity":1,"message":"295","line":210,"column":30,"nodeType":"296","messageId":"297","endLine":210,"endColumn":59},{"ruleId":"261","severity":1,"message":"262","line":230,"column":9,"nodeType":"263","messageId":"264","endLine":230,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":231,"column":9,"nodeType":"263","messageId":"264","endLine":231,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":241,"column":5,"nodeType":"263","messageId":"264","endLine":241,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":245,"column":4,"nodeType":"263","messageId":"264","endLine":245,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":267,"column":30,"nodeType":"296","messageId":"297","endLine":267,"endColumn":59},{"ruleId":"261","severity":1,"message":"262","line":288,"column":9,"nodeType":"263","messageId":"264","endLine":288,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":289,"column":9,"nodeType":"263","messageId":"264","endLine":289,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":298,"column":7,"nodeType":"263","messageId":"264","endLine":298,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":302,"column":7,"nodeType":"263","messageId":"264","endLine":302,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":343,"column":9,"nodeType":"263","messageId":"264","endLine":343,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":344,"column":9,"nodeType":"263","messageId":"264","endLine":344,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":351,"column":15,"nodeType":"263","messageId":"264","endLine":351,"endColumn":25},{"ruleId":"261","severity":1,"message":"262","line":378,"column":17,"nodeType":"263","messageId":"264","endLine":378,"endColumn":27},{"ruleId":"261","severity":1,"message":"262","line":382,"column":17,"nodeType":"263","messageId":"264","endLine":382,"endColumn":27},{"ruleId":"286","severity":1,"message":"301","line":1,"column":17,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"302","line":30,"column":15,"nodeType":"288","messageId":"289","endLine":30,"endColumn":16},{"ruleId":"277","severity":1,"message":"278","line":41,"column":60,"nodeType":"279","messageId":"280","endLine":41,"endColumn":62},{"ruleId":"286","severity":1,"message":"302","line":84,"column":17,"nodeType":"288","messageId":"289","endLine":84,"endColumn":18},{"ruleId":"277","severity":1,"message":"278","line":95,"column":62,"nodeType":"279","messageId":"280","endLine":95,"endColumn":64},{"ruleId":"277","severity":1,"message":"278","line":103,"column":46,"nodeType":"279","messageId":"280","endLine":103,"endColumn":48},{"ruleId":"277","severity":1,"message":"278","line":46,"column":42,"nodeType":"279","messageId":"280","endLine":46,"endColumn":44},{"ruleId":"277","severity":1,"message":"278","line":98,"column":44,"nodeType":"279","messageId":"280","endLine":98,"endColumn":46},{"ruleId":"286","severity":1,"message":"303","line":6,"column":7,"nodeType":"288","messageId":"289","endLine":6,"endColumn":8},{"ruleId":"304","severity":1,"message":"305","line":27,"column":6,"nodeType":"306","endLine":27,"endColumn":43,"suggestions":"307"},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","'setcompleted' is assigned a value but never used.","'option' is assigned a value but never used.","'useEffect' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'k'.","ArrowFunctionExpression","unsafeRefs","no-redeclare","'i' is already defined.","redeclared","'useState' is defined but never used.","'k' is assigned a value but never used.","'i' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rowsPerPage'. Either include it or remove the dependency array.","ArrayExpression",["310"],"no-global-assign","no-unsafe-negation",{"desc":"311","fix":"312"},"Update the dependencies array to be: [data, setTableRange, page, setSlice, rowsPerPage]",{"range":"313","text":"314"},[736,773],"[data, setTableRange, page, setSlice, rowsPerPage]"]